{"version":3,"sources":["webpack:///./demo/app.component.css","webpack:///./demo/app.component.html","webpack:///./demo/app.component.ts","webpack:///./demo/app.module.ts","webpack:///./demo/layout.service.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/dynamic-form/components/action-toolbar/action-toolbar.component.css","webpack:///./src/app/dynamic-form/components/action-toolbar/action-toolbar.component.html","webpack:///./src/app/dynamic-form/components/action-toolbar/action-toolbar.component.ts","webpack:///./src/app/dynamic-form/components/dynamic-base-component.ts","webpack:///./src/app/dynamic-form/components/dynamic-form/dynamic-form.component.css","webpack:///./src/app/dynamic-form/components/dynamic-form/dynamic-form.component.html","webpack:///./src/app/dynamic-form/components/dynamic-form/dynamic-form.component.ts","webpack:///./src/app/dynamic-form/components/dynamic-modal-dialog/dynamic-modal-dialog.component.css","webpack:///./src/app/dynamic-form/components/dynamic-modal-dialog/dynamic-modal-dialog.component.html","webpack:///./src/app/dynamic-form/components/dynamic-modal-dialog/dynamic-modal-dialog.component.ts","webpack:///./src/app/dynamic-form/components/form-address/form-address.component.css","webpack:///./src/app/dynamic-form/components/form-address/form-address.component.html","webpack:///./src/app/dynamic-form/components/form-address/form-address.component.ts","webpack:///./src/app/dynamic-form/components/form-array/form-array.component.css","webpack:///./src/app/dynamic-form/components/form-array/form-array.component.html","webpack:///./src/app/dynamic-form/components/form-array/form-array.component.ts","webpack:///./src/app/dynamic-form/components/form-button/form-button.component.css","webpack:///./src/app/dynamic-form/components/form-button/form-button.component.html","webpack:///./src/app/dynamic-form/components/form-button/form-button.component.ts","webpack:///./src/app/dynamic-form/components/form-checkbox-group/form-checkbox-group.component.css","webpack:///./src/app/dynamic-form/components/form-checkbox-group/form-checkbox-group.component.html","webpack:///./src/app/dynamic-form/components/form-checkbox-group/form-checkbox-group.component.ts","webpack:///./src/app/dynamic-form/components/form-checkbox/form-checkbox.component.css","webpack:///./src/app/dynamic-form/components/form-checkbox/form-checkbox.component.html","webpack:///./src/app/dynamic-form/components/form-checkbox/form-checkbox.component.ts","webpack:///./src/app/dynamic-form/components/form-date/form-date.component.css","webpack:///./src/app/dynamic-form/components/form-date/form-date.component.html","webpack:///./src/app/dynamic-form/components/form-date/form-date.component.ts","webpack:///./src/app/dynamic-form/components/form-email/form-email.component.css","webpack:///./src/app/dynamic-form/components/form-email/form-email.component.html","webpack:///./src/app/dynamic-form/components/form-email/form-email.component.ts","webpack:///./src/app/dynamic-form/components/form-expansion-panel/form-expansion-panel.component.css","webpack:///./src/app/dynamic-form/components/form-expansion-panel/form-expansion-panel.component.html","webpack:///./src/app/dynamic-form/components/form-expansion-panel/form-expansion-panel.component.ts","webpack:///./src/app/dynamic-form/components/form-fieldset/form-fieldset.component.css","webpack:///./src/app/dynamic-form/components/form-fieldset/form-fieldset.component.html","webpack:///./src/app/dynamic-form/components/form-fieldset/form-fieldset.component.ts","webpack:///./src/app/dynamic-form/components/form-heading/form-heading.component.css","webpack:///./src/app/dynamic-form/components/form-heading/form-heading.component.html","webpack:///./src/app/dynamic-form/components/form-heading/form-heading.component.ts","webpack:///./src/app/dynamic-form/components/form-number/form-number.component.css","webpack:///./src/app/dynamic-form/components/form-number/form-number.component.html","webpack:///./src/app/dynamic-form/components/form-number/form-number.component.ts","webpack:///./src/app/dynamic-form/components/form-password/form-password.component.css","webpack:///./src/app/dynamic-form/components/form-password/form-password.component.html","webpack:///./src/app/dynamic-form/components/form-password/form-password.component.ts","webpack:///./src/app/dynamic-form/components/form-radio/form-radio.component.css","webpack:///./src/app/dynamic-form/components/form-radio/form-radio.component.html","webpack:///./src/app/dynamic-form/components/form-radio/form-radio.component.ts","webpack:///./src/app/dynamic-form/components/form-select/form-select.component.css","webpack:///./src/app/dynamic-form/components/form-select/form-select.component.html","webpack:///./src/app/dynamic-form/components/form-select/form-select.component.ts","webpack:///./src/app/dynamic-form/components/form-slide-toggle/form-slide-toggle.component.css","webpack:///./src/app/dynamic-form/components/form-slide-toggle/form-slide-toggle.component.html","webpack:///./src/app/dynamic-form/components/form-slide-toggle/form-slide-toggle.component.ts","webpack:///./src/app/dynamic-form/components/form-slider/form-slider.component.css","webpack:///./src/app/dynamic-form/components/form-slider/form-slider.component.html","webpack:///./src/app/dynamic-form/components/form-slider/form-slider.component.ts","webpack:///./src/app/dynamic-form/components/form-states/form-states.component.css","webpack:///./src/app/dynamic-form/components/form-states/form-states.component.html","webpack:///./src/app/dynamic-form/components/form-states/form-states.component.ts","webpack:///./src/app/dynamic-form/components/form-static-panel/form-static-panel.component.css","webpack:///./src/app/dynamic-form/components/form-static-panel/form-static-panel.component.html","webpack:///./src/app/dynamic-form/components/form-static-panel/form-static-panel.component.ts","webpack:///./src/app/dynamic-form/components/form-static/form-static.component.css","webpack:///./src/app/dynamic-form/components/form-static/form-static.component.html","webpack:///./src/app/dynamic-form/components/form-static/form-static.component.ts","webpack:///./src/app/dynamic-form/components/form-text-mask/form-text-mask.component.css","webpack:///./src/app/dynamic-form/components/form-text-mask/form-text-mask.component.html","webpack:///./src/app/dynamic-form/components/form-text-mask/form-text-mask.component.ts","webpack:///./src/app/dynamic-form/components/form-text/form-text.component.css","webpack:///./src/app/dynamic-form/components/form-text/form-text.component.html","webpack:///./src/app/dynamic-form/components/form-text/form-text.component.ts","webpack:///./src/app/dynamic-form/components/form-textarea/form-textarea.component.css","webpack:///./src/app/dynamic-form/components/form-textarea/form-textarea.component.html","webpack:///./src/app/dynamic-form/components/form-textarea/form-textarea.component.ts","webpack:///./src/app/dynamic-form/components/form-time/form-time.component.css","webpack:///./src/app/dynamic-form/components/form-time/form-time.component.html","webpack:///./src/app/dynamic-form/components/form-time/form-time.component.ts","webpack:///./src/app/dynamic-form/components/layout-editor/layout-editor.component.css","webpack:///./src/app/dynamic-form/components/layout-editor/layout-editor.component.html","webpack:///./src/app/dynamic-form/components/layout-editor/layout-editor.component.ts","webpack:///./src/app/dynamic-form/directives/dynamic-field/dynamic-field.directive.ts","webpack:///./src/app/dynamic-form/dynamic-data.module.ts","webpack:///./src/app/dynamic-form/dynamic-form-builder.ts","webpack:///./src/app/dynamic-form/enumerations/action-buttons.ts","webpack:///./src/app/dynamic-form/enumerations/dialog-buttons.ts","webpack:///./src/app/dynamic-form/validators/required-minimum.ts","webpack:///./src/app/element-config/config/action-toolbar.ts","webpack:///./src/app/element-config/config/address.ts","webpack:///./src/app/element-config/config/array.ts","webpack:///./src/app/element-config/config/button.ts","webpack:///./src/app/element-config/config/checkbox-group.ts","webpack:///./src/app/element-config/config/checkbox.ts","webpack:///./src/app/element-config/config/date.ts","webpack:///./src/app/element-config/config/email.ts","webpack:///./src/app/element-config/config/fieldset.ts","webpack:///./src/app/element-config/config/heading.ts","webpack:///./src/app/element-config/config/index.ts","webpack:///./src/app/element-config/config/layout-editor.ts","webpack:///./src/app/element-config/config/number.ts","webpack:///./src/app/element-config/config/panel.ts","webpack:///./src/app/element-config/config/password.ts","webpack:///./src/app/element-config/config/phone.ts","webpack:///./src/app/element-config/config/radio.ts","webpack:///./src/app/element-config/config/select.ts","webpack:///./src/app/element-config/config/slide-toggle.ts","webpack:///./src/app/element-config/config/slider.ts","webpack:///./src/app/element-config/config/ssn.ts","webpack:///./src/app/element-config/config/states.ts","webpack:///./src/app/element-config/config/static-panel.ts","webpack:///./src/app/element-config/config/static.ts","webpack:///./src/app/element-config/config/text-mask.ts","webpack:///./src/app/element-config/config/text.ts","webpack:///./src/app/element-config/config/textarea.ts","webpack:///./src/app/element-config/config/time.ts","webpack:///./src/app/element-config/config/type-select.ts","webpack:///./src/app/element-config/config/zip.ts","webpack:///./src/app/element-config/element-config.ts","webpack:///./src/app/element-config/element-type.ts","webpack:///./src/app/element-config/index.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/shared/directives/index.ts","webpack:///./src/app/shared/directives/maximum-date/maximum-date.directive.ts","webpack:///./src/app/shared/directives/maximum-number/maximum-number.directive.ts","webpack:///./src/app/shared/directives/minimum-date/minimum-date.directive.ts","webpack:///./src/app/shared/directives/minimum-number/minimum-number.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"dynamic-form {\\n  display: inline-block;\\n  float: left;\\n  padding-left: 25px;\\n}\\n.half-size {\\n  width: 50%;\\n}\\n#preview{\\n  width: 100%;\\n  border: 1px solid forestgreen;\\n}\\npre {\\n  display: inline-block;\\n  /*display: none;*/\\n  padding-left: 10px;\\n  background-color: lightgrey;\\n  width: 46%;\\n}\\n\"","module.exports = \"<div class=\\\"app\\\">\\n  <dynamic-form #form class=\\\"half-size\\\" [layout]=\\\"layout\\\" [entity]=\\\"entity\\\" (cancel)=\\\"onCancel($event)\\\"\\n    (remove)=\\\"onDelete($event)\\\" (submit)=\\\"onSubmit($event)\\\">\\n  </dynamic-form>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { DynamicFormComponent } from '../src/app/dynamic-form/components/dynamic-form/dynamic-form.component';\nimport { FieldConfig } from '../src/app/dynamic-form/interfaces/field-config';\n\nimport { LayoutService } from './layout.service';\n\n@Component({\n  selector: 'dynamic-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  // for json api\n  @ViewChild('form')\n  formDemoType: DynamicFormComponent;\n\n  @ViewChild('form')\n  form: DynamicFormComponent;\n\n  jsonSelect: FieldConfig[] = [];\n  selectedJson: {};\n\n  layout: FieldConfig[] = [];\n  entity: {};\n\n  formValue: any;\n\n  constructor(private layoutService: LayoutService) { }\n\n  ngOnInit() {\n    var previewJson = localStorage.getItem(\"previewJson\");\n    if (previewJson == undefined || previewJson ==null)\n      localStorage.setItem(\"previewJson\", JSON.stringify([{ \"type\": \"heading\", \"label\": \"Dynamic Data demo\", \"options\": { \"level\": 1 } }, { \"type\": \"static\", \"label\": \"<em>Enrolling in this program requires your consent.</em>\" }, { \"type\": \"states\", \"name\": \"state\", \"label\": \"State\", \"options\": { \"hint\": \"Select a state\", \"showIf\": {}, \"validation\": { \"required\": true, \"requiredIf\": {} } } }, { \"type\": \"ssn\", \"name\": \"ssn\", \"label\": \"Social security number\", \"options\": { \"validation\": { \"required\": true, \"requiredIf\": {} } } }, { \"type\": \"zip\", \"name\": \"zip\", \"label\": \"Zip\", \"options\": { \"validation\": { \"required\": true, \"requiredIf\": {} } } }, { \"name\": \"password\", \"type\": \"password\", \"label\": \"Password\", \"options\": { \"hint\": \"Enter your password.\", \"validation\": { \"required\": true } } }, { \"name\": \"startTime\", \"type\": \"time\", \"label\": \"Start time\", \"options\": { \"hint\": \"Enter start time.\", \"validation\": { \"required\": true } } }, { \"name\": \"altPhone\", \"type\": \"text-mask\", \"label\": \"Alt phone\", \"options\": { \"hint\": \"Enter another phone number.\", \"inputMask\": \"(000) 000-0000\", \"validation\": { \"required\": true, \"pattern\": \"[0-9]{10}\", \"patternValMsg\": \"Alt phone should be 10 digits.\" } } }, { \"type\": \"checkbox\", \"name\": \"consent\", \"label\": \"I consent.\", \"options\": { \"hint\": \"Consent is required to continue.\", \"align\": \"after\", \"validation\": { \"required\": true } } }, { \"name\": \"name\", \"type\": \"text\", \"label\": \"Full name\", \"options\": { \"hint\": \"Enter your full name.\", \"validation\": { \"required\": true, \"minLength\": \"3\", \"maxLength\": \"100\" } } }, { \"name\": \"schoolInfo\", \"type\": \"panel\", \"label\": \"School Information\", \"options\": { \"validation\": { \"required\": true }, \"hint\": \"Talkin' 'bout your education\", \"fields\": [{ \"name\": \"school\", \"type\": \"text\", \"label\": \"School\", \"options\": { \"autocomplete\": true, \"hint\": \"Start typing...\", \"validation\": { \"required\": true }, \"items\": [{ \"label\": \"Central High School\" }, { \"label\": \"East High School\" }, { \"label\": \"North High School\" }] } }, { \"name\": \"address\", \"type\": \"address\", \"label\": \"Address\", \"options\": { \"validation\": { \"required\": true }, \"hint\": \"Enter your school's address\" } }, { \"name\": \"studentId\", \"type\": \"text\", \"label\": \"Student Id\", \"options\": { \"hint\": \"AA000\", \"validation\": { \"required\": true, \"pattern\": \"[A-Z]{2}[0-9]{3}\" } } }] } }, { \"name\": \"age\", \"type\": \"number\", \"label\": \"Age\", \"options\": { \"hint\": \"Provide your current age.\", \"validation\": { \"required\": true, \"min\": \"12\", \"max\": \"22\" } } }, { \"type\": \"date\", \"name\": \"dateOfBirth\", \"label\": \"Date of birth\", \"options\": { \"hint\": \"Provide your date of birth.\", \"startAt\": { \"year\": \"2001\", \"month\": \"0\", \"day\": \"1\" }, \"validation\": { \"required\": true, \"minDate\": { \"year\": \"2001\", \"month\": \"0\", \"day\": \"1\" }, \"maxDate\": { \"year\": \"2010\", \"month\": \"11\", \"day\": \"15\" } } } }, { \"type\": \"select\", \"name\": \"status\", \"label\": \"Status\", \"options\": { \"hint\": \"Select the case status\", \"validation\": { \"required\": true }, \"items\": [{ \"value\": \"1\", \"label\": \"New\" }, { \"value\": \"2\", \"label\": \"Active\" }, { \"value\": \"3\", \"label\": \"Closed\" }, { \"value\": \"4\", \"label\": \"Other\", \"options\": { \"specify\": { \"name\": \"statusOther\", \"type\": \"text\", \"label\": \"Please specify\", \"options\": { \"hint\": \"(e.g. withdrawn, deceased)\", \"validation\": { \"required\": true, \"minLength\": \"2\", \"maxLength\": \"100\" } } } } }] } }, { \"type\": \"select\", \"name\": \"appointmentTime\", \"label\": \"Appointment time\", \"options\": { \"hint\": \"Select the appointment time\", \"validation\": { \"required\": true }, \"items\": [{ \"value\": \"10\", \"label\": \"10:00 AM\" }, { \"value\": \"11\", \"label\": \"11:00 AM\" }, { \"value\": \"12\", \"label\": \"12:00 PM\" }, { \"value\": \"13\", \"label\": \" 1:00 PM\", \"options\": { \"specify\": { \"name\": \"statusOther\", \"type\": \"text\", \"label\": \"Please specify\", \"options\": { \"hint\": \"(e.g. withdrawn, deceased)\", \"validation\": { \"required\": true, \"minLength\": \"2\", \"maxLength\": \"100\" } } } } }] } }, { \"name\": \"sportsList\", \"type\": \"checkbox-group\", \"label\": \"Which of the following sports did you play last year?\", \"options\": { \"hint\": \"(Check all that apply)\", \"validation\": { \"requiredMin\": \"2\" }, \"fields\": [{ \"type\": \"checkbox\", \"name\": \"baseball\", \"label\": \"Baseball\", \"options\": { \"align\": \"after\", \"validation\": {} } }, { \"type\": \"checkbox\", \"name\": \"soccer\", \"label\": \"Soccer\", \"options\": { \"align\": \"after\", \"validation\": {} } }, { \"type\": \"checkbox\", \"name\": \"teamSport\", \"label\": \"Other team sport\", \"options\": { \"align\": \"after\", \"validation\": {}, \"specify\": { \"name\": \"teamSportOther\", \"type\": \"text\", \"label\": \"Please specify type\", \"options\": { \"hint\": \"(e.g. dodge ball, kickball)\", \"validation\": { \"requiredIf\": { \"property\": \"teamSport\", \"value\": \"true\" }, \"minLength\": \"3\", \"maxLength\": \"100\" } } } } }, { \"type\": \"checkbox\", \"name\": \"sport\", \"label\": \"Other individual sport\", \"options\": { \"align\": \"after\", \"validation\": {}, \"specify\": { \"name\": \"sportOther\", \"type\": \"text\", \"label\": \"Please specify\", \"options\": { \"hint\": \"(e.g. running, swimming)\", \"validation\": { \"required\": true, \"minLength\": \"3\", \"maxLength\": \"100\" } } } } }] } }, { \"name\": \"brightness\", \"type\": \"slider\", \"label\": \"Brightness\", \"options\": { \"validation\": { \"required\": true, \"min\": 0, \"max\": \"10\" }, \"invert\": false, \"vertical\": false, \"thumbLabel\": true, \"step\": \"0.5\", \"tickInterval\": \"auto\" } }, { \"type\": \"radio\", \"name\": \"color\", \"label\": \"Which color is your favorite?\", \"options\": { \"hint\": \"Select your preference\", \"align\": \"after\", \"vertical\": true, \"validation\": { \"required\": true }, \"items\": [{ \"value\": \"blue\", \"label\": \"Blue\" }, { \"value\": \"red\", \"label\": \"Red\" }, { \"value\": \"yellow\", \"label\": \"Yellow\" }, { \"value\": \"other\", \"label\": \"Other\", \"options\": { \"specify\": { \"name\": \"colorOther\", \"type\": \"text\", \"label\": \"Please specify\", \"options\": { \"hint\": \"(e.g. turquoise, chartreuse)\", \"validation\": { \"required\": true, \"minLength\": \"3\", \"maxLength\": \"100\" } } } } }] } }, { \"name\": \"contactInfo\", \"type\": \"fieldset\", \"label\": \"Your contact info\", \"options\": { \"fields\": [{ \"type\": \"phone\", \"name\": \"phone\", \"label\": \"Phone\", \"options\": { \"validation\": { \"required\": true, \"patternValMsg\": \"Phone must be 10 digits\", \"requiredIf\": {} } } }, { \"name\": \"email\", \"type\": \"email\", \"label\": \"Email\", \"options\": { \"hint\": \"Provide your email address.\", \"validation\": { \"required\": false } } }] } }, { \"name\": \"contacts\", \"type\": \"array\", \"label\": \"Additional contacts\", \"options\": { \"hint\": \"Please provide a few names of people close to you.\", \"addText\": \"Add contact\", \"removeText\": \"Remove contact\", \"fields\": [{ \"name\": \"contactName\", \"type\": \"text\", \"label\": \"Name\", \"options\": { \"hint\": \"Enter the full name\", \"validation\": { \"required\": true, \"minLength\": 3, \"maxLength\": 100 } } }, { \"name\": \"relationship\", \"type\": \"select\", \"label\": \"Relationship to you\", \"options\": { \"hint\": \"Give us a clue\", \"items\": [{ \"value\": \"mother\", \"label\": \"Mom\" }, { \"value\": \"father\", \"label\": \"Dad\" }, { \"value\": \"other\", \"label\": \"Other\", \"options\": { \"specify\": { \"name\": \"otherRelationship\", \"type\": \"text\", \"label\": \"Please specify\", \"options\": { \"hint\": \"(e.g. grandparent, neighbor)\", \"validation\": { \"requiredIf\": { \"property\": \"relationship\", \"value\": \"other\" }, \"minLength\": \"2\", \"maxLength\": \"100\" } } } } }], \"validation\": { \"required\": false } } }] } }, { \"name\": \"notes\", \"type\": \"textarea\", \"label\": \"Notes\", \"options\": { \"hint\": \"Please provide a few more details.\", \"validation\": { \"required\": true } } }, { \"type\": \"slide-toggle\", \"name\": \"onOff\", \"label\": \"Toggle on or off.\", \"options\": { \"align\": \"after\", \"validation\": { \"required\": true } } }, { \"type\": \"action-toolbar\", \"options\": { \"buttons\": { \"allowDelete\": false, \"allowCancel\": false, \"allowSubmit\": true } } }]));\n\n    previewJson = localStorage.getItem(\"previewJson\");\n    this.layout = JSON.parse(previewJson);\n  }\n\n  onChange(val: any) {\n\n  }\n\n  onSubmit(value: { [name: string]: any }) {\n\n  }\n\n  onDelete() {\n    // // handle delete event\n    // console.log('handle delete');\n  }\n\n  onCancel() {\n    // handle cancel event\n    console.log('handle cancel');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DynamicDataModule } from '../src/app/dynamic-form/dynamic-data.module';\nimport { AppComponent } from './app.component';\nimport { LayoutService } from './layout.service';\n\n// published library\n// import {DynamicDataModule} from '../lib/dynamic-form/dynamic-data.module';\n// import {LayoutService} from '../lib/dynamic-form/services/layout-service/layout.service';\n\n@NgModule({\n  imports: [BrowserModule, DynamicDataModule],\n  declarations: [AppComponent],\n  providers: [LayoutService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class LayoutService {\n    constructor(private http: HttpClient) {}\n\n    get(url: string): Observable<any> {\n        return (\n            this.http\n                .get(url)\n                // .delay(2000)\n                .pipe(data => {\n                    return data;\n                })\n                .pipe(\n                    catchError(error => {\n                        throw error;\n                    })\n                )\n        );\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [],\n})\nexport class CoreModule {}\n","module.exports = \".fill-space {\\n  flex: 1 1 auto;\\n}\\n\\n.mat-toolbar {\\n  background: rgba(253, 252, 252, 0.87);\\n}\\n\"","module.exports = \"<ng-container>\\n  <mat-toolbar>\\n      <button\\n        *ngIf=\\\"config.options.buttons.allowDelete\\\"\\n        mat-button\\n        mat-raised-button\\n        data-action=\\\"delete\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"warn\\\"\\n      >\\n        {{ getButtonText('delete') }}\\n      </button>\\n      <span class=\\\"fill-space\\\"></span>\\n      <button\\n        *ngIf=\\\"config.options.buttons.allowCancel\\\"\\n        mat-button\\n        mat-raised-button\\n        data-action=\\\"cancel\\\"\\n        type=\\\"submit\\\"\\n      >\\n        {{ getButtonText('cancel') }}\\n      </button>\\n\\n      <button\\n        *ngIf=\\\"config.options.buttons.allowSubmit\\\"\\n        mat-button\\n        mat-raised-button\\n        data-action=\\\"submit\\\"\\n        color=\\\"primary\\\"\\n        type=\\\"submit\\\"\\n      >\\n        {{ getButtonText('submit') }}\\n      </button>\\n  </mat-toolbar>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { ActionButtons } from '../../enumerations/action-buttons';\nimport { Field } from '../../interfaces/field';\nimport { FieldConfig } from '../../interfaces/field-config';\n\n@Component({\n  selector: 'dynamic-action-toolbar',\n  templateUrl: './action-toolbar.component.html',\n  styleUrls: ['./action-toolbar.component.css'],\n})\nexport class ActionToolbarComponent implements Field {\n  config: FieldConfig;\n  group: FormGroup;\n\n  getActionButtonEnum(button: string) {\n    switch (button) {\n      case 'cancel':\n        return ActionButtons.Cancel;\n      case 'delete':\n        return ActionButtons.Delete;\n      case 'submit':\n        return ActionButtons.Submit;\n    }\n  }\n\n  getButtonText(button: string) {\n    switch (this.getActionButtonEnum(button)) {\n      case ActionButtons.Cancel:\n        return this.config.options.buttons.cancelButtonText\n          ? this.config.options.buttons.cancelButtonText\n          : 'Cancel';\n      case ActionButtons.Delete:\n        return this.config.options.buttons.deleteButtonText\n          ? this.config.options.buttons.deleteButtonText\n          : 'Delete';\n      case ActionButtons.Submit:\n        return this.config.options.buttons.submitButtonText\n          ? this.config.options.buttons.submitButtonText\n          : 'Submit';\n    }\n  }\n}\n","/// <reference types=\"@types/node\" />\n\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { Field } from '../interfaces/field';\nimport { FieldConfig } from '../interfaces/field-config';\nimport { ItemConfig } from '../interfaces/item-config';\n\nimport * as uuidv4_ from 'uuid/v4';\n// workaround - assign import to a variable to avoid \n// rollup.js error \"Cannot call a namespace ('uuidv4')\"\nconst uuid: any = uuidv4_;\n\nexport class DynamicBaseComponent implements Field, OnInit {\n  id: string;\n  config: FieldConfig;\n  group: FormGroup;\n\n  constructor() {\n    this.id = `ddc-id-${uuid()}`;\n  }\n\n  ngOnInit() {\n    this.requiredIfChanges();\n    this.showIfChanges();\n  }\n\n  resetControls(\n    config: any,\n    disable: boolean = false,\n    nestedGroup: FormGroup = null\n  ) {\n    const group = nestedGroup || this.group;\n    if (group.controls[config.name]) {\n      if (disable) {\n        group.controls[config.name].disable(); // disable to be exempt from validation checks\n        group.controls[config.name].reset();\n      } else {\n        group.controls[config.name].enable();\n      }\n    }\n\n    if (config.options.fields) {\n      config.options.fields.forEach(f => {\n        const g: any =\n          group.controls[config.name] instanceof FormGroup\n            ? group.controls[config.name]\n            : null;\n        this.resetControls(f, disable, g);\n      });\n    }\n\n    if (config.options.items) {\n      config.options.items.forEach(i => {\n        if (i.options && i.options.specify) {\n          this.resetControls(i.options.specify, disable);\n          this.handleSpecifyConfig(group, i.options.specify, disable);\n        }\n      });\n    }\n\n    if (config.options.specify) {\n      this.resetControls(config.options.specify, disable);\n      this.handleSpecifyConfig(group, config.options.specify, disable);\n    }\n  }\n\n  findControl(group: AbstractControl, properties: string[]) {\n    // NOTE: this method is still limited to properties within the same FormGroup\n    // properties represents the array of a property containing dot notation; i.e. insuranceType.mediCal\n\n    const property: string = properties[0];\n    // get the first property and check if it is a FormGroup; i.e. insuranceType\n    if (group.get(property) instanceof FormGroup) {\n      // check nested FormGroup for the next property within the dot notation; i.e. mediCal\n      return this.findControl(group.get(property), properties.slice(1));\n    }\n    // return the lowest level FormControl with the specified property name\n    return group.get(property);\n  }\n\n  handleSpecifyConfig(group: FormGroup, spec: any, disable: boolean) {\n    if (group.get(spec.name)) {\n      group.get(spec.name).disable();\n    }\n  }\n\n  handleEnableDisable(validation: any, onInit: boolean = false) {\n    if (\n      !this.requiredIf() ||\n      (onInit &&\n        this.group.controls[validation.property].value === undefined &&\n        this.group.value &&\n        this.group.value[validation.property] &&\n        this.group.value[validation.property].toString() ===\n          validation.value.toString()) ||\n      (this.group.controls[validation.property].value &&\n        this.group.controls[validation.property].value.toString() !==\n          validation.value.toString())\n    ) {\n      this.resetControls(this.config, true);\n    } else {\n      this.resetControls(this.config);\n    }\n  }\n\n  requiredIfChanges() {\n    if (!this.config.options || !this.config.options.validation) {\n      return;\n    }\n    const validation = this.config.options.validation.requiredIf;\n    if (\n      validation &&\n      validation.property &&\n      this.group.controls[validation.property]\n    ) {\n      this.handleEnableDisable(validation, true); // check if text component should be disabled onInit\n      this.group.controls[validation.property].valueChanges.subscribe(val => {\n        this.handleEnableDisable(validation);\n      });\n    }\n  }\n\n  requiredIf(): any {\n    const validation = this.config.options.validation.requiredIf;\n    let required =\n      validation &&\n      validation.property &&\n      this.group.controls[validation.property] &&\n      (!this.group.controls[validation.property].value ||\n        (this.group.controls[validation.property].value &&\n          validation.value &&\n          this.group.controls[validation.property].value.toString() ===\n            validation.value.toString()));\n\n    // check parent FormGroup if validation.property does not exist within the FormArray\n    if (\n      this.group.parent &&\n      this.group.parent instanceof FormArray &&\n      validation &&\n      validation.property &&\n      !this.group.controls[validation.property]\n    ) {\n      const parentGroup: any = this.group.parent.parent;\n      required =\n        validation &&\n        validation.property &&\n        parentGroup.controls[validation.property] &&\n        (!parentGroup.controls[validation.property].value ||\n          (parentGroup.controls[validation.property].value &&\n            validation.value &&\n            parentGroup.controls[validation.property].value.toString() ===\n              validation.value.toString()));\n    }\n\n    return required;\n  }\n\n  showIfChanges() {\n    const showIf =\n      this.config.options && this.config.options.showIf\n        ? this.config.options.showIf\n        : null;\n    const ctrl =\n      showIf &&\n      showIf.property &&\n      this.findControl(this.group, showIf.property.split('.'));\n    if (ctrl) {\n      ctrl.valueChanges.subscribe(val => {\n        if (!this.showIf()) {\n          this.resetControls(this.config, true);\n        } else {\n          this.resetControls(this.config);\n        }\n      });\n    }\n  }\n\n  showIf(): any {\n    const showIf =\n      this.config.options && this.config.options.showIf\n        ? this.config.options.showIf\n        : null;\n    const ctrl =\n      showIf &&\n      showIf.property &&\n      this.findControl(this.group, showIf.property.split('.'));\n    const show =\n      !showIf ||\n      (showIf && !showIf.property) ||\n      (showIf &&\n        showIf.property &&\n        ctrl &&\n        (ctrl.value &&\n          showIf.value &&\n          ctrl.value.toString() === showIf.value.toString()));\n    return show;\n  }\n}\n","module.exports = \"form {\\n  font-family: Roboto, Arial, sans-serif;\\n}\\n\\n:host ::ng-deep .dynamic-group {\\n  margin-top: 2em;\\n  margin-bottom: 2em;\\n}\\n\\n:host ::ng-deep .component-container{\\n  margin-top: 1em;\\n  margin-bottom: 1em;\\n}\\n\\n:host ::ng-deep fieldset .dynamic-field:first-of-type,\\n:host ::ng-deep mat-card .dynamic-field:first-of-type{\\n   margin-top: 0;\\n }\\n\\n:host ::ng-deep .mimic-mat-hint {\\n  color: rgba(0,0,0,.54);\\n  font-size: 75%;\\n  margin-top: .54167em;\\n}\\n\\n:host ::ng-deep .mimic-mat-error {\\n  color: rgb(244, 67, 54);\\n  font-size: 75%;\\n  font-weight: normal;\\n  line-height: 13.5px;\\n  text-align: left;\\n  /*position: absolute;*/\\n  margin-top: .54167em;\\n}\\n\\n:host ::ng-deep .mimic-mat-placeholder {\\n  display: block;\\n}\\n\\n:host ::ng-deep .mimic-mat-placeholder:not(.mat-error) {\\n  color: rgba(0, 0, 0, .54);\\n}\\n\\n:host ::ng-deep .mimic-mat-label {\\n   font-size: 14px;\\n    line-height: 1.42857143;\\n    font-weight: 400;\\n}\"","module.exports = \"<form\\n  class=\\\"dynamic-form\\\"\\n  [id]=\\\"id\\\"\\n  [name]=\\\"id\\\"\\n  [formGroup]=\\\"form\\\"\\n  [ngClass]=\\\"submitted ? 'ddc-submitted' : ''\\\"\\n  (submit)=\\\"handleSubmit($event)\\\">\\n  <div\\n    class=\\\"component-container\\\"\\n    *ngFor=\\\"let config of layout;\\\"\\n    dynamicField\\n    [config]=\\\"config\\\"\\n    [group]=\\\"form\\\">\\n  </div>\\n</form>\\n\"","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    FormArray,\n    FormControl,\n    FormGroup\n} from '@angular/forms';\n\nimport { ElementConfig } from '../../../element-config/element-config';\nimport { ElementType } from '../../../element-config/element-type';\nimport { DynamicFormBuilder } from '../../dynamic-form-builder';\nimport { ActionButtons } from '../../enumerations/action-buttons';\nimport { FieldConfig } from '../../interfaces/field-config';\n\nimport * as uuidv4_ from 'uuid/v4';\n// workaround - assign import to a variable to avoid\n// rollup.js error \"Cannot call a namespace ('uuidv4')\"\nconst uuid: any = uuidv4_;\n\n@Component({\n    selector: 'dynamic-form',\n    templateUrl: './dynamic-form.component.html',\n    styleUrls: ['./dynamic-form.component.css']\n})\nexport class DynamicFormComponent implements OnChanges, OnInit {\n    @Input()\n    layout?: FieldConfig[] = [];\n    @Input()\n    entity?: any;\n\n    @Output()\n    valueChanges: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    cancel: EventEmitter<any> = new EventEmitter<any>();\n    @Output()\n    remove: EventEmitter<any> = new EventEmitter<any>();\n    @Output()\n    submit: EventEmitter<any> = new EventEmitter<any>();\n\n    id: string;\n    form: FormGroup;\n    dynFormBuilder: DynamicFormBuilder;\n    submitted: boolean;\n\n    get changes() {\n        return this.form.valueChanges;\n    }\n\n    get valid() {\n        return this.form.valid;\n    }\n\n    get errors() {\n        return this.getErrors(this.form);\n    }\n\n    get value() {\n        // getRawValue will include disabled controls. value will not.\n        return this.form.getRawValue();\n        // this.form.value;\n    }\n\n    constructor(private elRef: ElementRef) {\n        this.id = `dd-id-${uuid()}`;\n        this.dynFormBuilder = new DynamicFormBuilder();\n        this.submitted = false;\n    }\n\n    ngOnInit() {\n        this.form = this.dynFormBuilder.createForm();\n        this.reconcileLayout();\n        this.reconcileForm();\n\n        this.form.valueChanges.subscribe(val => {\n            this.valueChanges.emit(val);\n        });\n    }\n\n    ngOnChanges() {\n        this.reconcileLayout();\n        this.reconcileForm();\n    }\n\n    reconcileForm() {\n        if (this.dynFormBuilder && this.form) {\n            this.dynFormBuilder.reconcileForm(\n                this.form,\n                this.layout,\n                this.entity\n            );\n        }\n    }\n\n    reconcileLayout() {\n        if (!this.layout) {\n            const actionToolbar = ElementConfig.get(ElementType.ActionToolbar)\n                .entity;\n            if (this.entity && this.entity.fields) {\n                // we know we're editing so let's include the delete button\n                actionToolbar.options.buttons.allowDelete = true;\n                this.layout = ElementConfig.parseEntity(this.entity.fields);\n            } else {\n                // this is a new layout; no delete needed\n                actionToolbar.options.buttons.allowDelete = false;\n                this.layout = [];\n                this.layout.push(\n                    ElementConfig.get(ElementType.LayoutEditor).layout\n                );\n            }\n            this.layout.push(actionToolbar);\n        }\n    }\n\n    validateFormControls(control: AbstractControl) {\n        if (control instanceof FormControl) {\n            control.markAsTouched({ onlySelf: true });\n            return;\n        } else if (control instanceof FormGroup) {\n            // controls is json object, so get keys and loop to get form controls\n            Object.keys(control.controls).forEach(key => {\n                const c = control.get(key);\n                c.markAsTouched({ onlySelf: true });\n                this.validateFormControls(c);\n            });\n        } else if (control instanceof FormArray) {\n            // controls is array, so use it\n            control.controls.forEach(c => {\n                c.markAsTouched({ onlySelf: true });\n                this.validateFormControls(c);\n            });\n        }\n    }\n\n    validate() {\n        this.validateFormControls(this.form);\n    }\n\n    handleSubmit(event: Event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.submitted = true;\n        const btn = this.elRef.nativeElement.querySelector(\n            'button.cdk-focused.cdk-mouse-focused'\n        );\n        if (btn) {\n            const action = btn.getAttribute('data-action');\n            switch (action) {\n                case ActionButtons.Delete:\n                    this.remove.emit(this.value);\n                    break;\n                case ActionButtons.Cancel:\n                    this.cancel.emit(this.value);\n                    break;\n                case ActionButtons.Submit:\n                    this.validateFormControls(this.form);\n                    this.submit.emit(this.value);\n                    break;\n                default:\n                    console.log('Unknown action');\n                    break;\n            }\n        }\n    }\n\n    setDisabled(name: string, disable: boolean) {\n        // if already added to controls, change there\n        if (this.form.controls[name]) {\n            const method = disable ? 'disable' : 'enable';\n            this.form.controls[name][method]();\n            return;\n        }\n        // otherwise, change config so it is built with corret disable\n        this.layout = this.layout.map(item => {\n            if (item.name === name) {\n                if (!item.options) {\n                    item.options = {};\n                }\n                item.options.disabled = disable;\n            }\n            return item;\n        });\n    }\n\n    getValue(name: string): any {\n        const value = this.entity ? this.entity[name] : this.entity;\n\n        if (!value) {\n            return value;\n        }\n\n        const config = this.layout.find(field => field.name === name);\n        // type conversion\n        switch (config ? config.type : '') {\n            case 'date':\n                return new Date(value);\n            default:\n                return value;\n        }\n    }\n\n    getControlErrors(key: string, control: any) {\n        if (control instanceof FormControl) {\n            return {\n                field: key,\n                errors: control.errors\n            };\n        }\n\n        let errs = control.errors;\n        let childErrs = null;\n\n        if (control instanceof FormGroup) {\n            childErrs = this.getErrors(control as FormGroup);\n        } else if (control instanceof FormArray) {\n            childErrs = (control as FormArray).controls\n                .map((c, i) => {\n                    return this.getControlErrors(key + '[' + i + ']', c);\n                })\n                .filter(x => x.errors);\n        }\n\n        if (childErrs && childErrs.length > 0) {\n            if (!errs) {\n                errs = {};\n            }\n            errs['children'] = childErrs;\n        }\n        return {\n            field: key,\n            errors: errs\n        };\n    }\n\n    getErrors(group: FormGroup) {\n        if (!group.controls) {\n            return {};\n        }\n\n        return Object.keys(group.controls)\n            .map(key => {\n                return this.getControlErrors(key, group.controls[key]);\n            })\n            .filter(x => x.errors);\n    }\n\n    getControlsForGroup(group: FormGroup) {\n        if (!group || !group.controls) {\n            return [];\n        }\n        const keys = Object.keys(group.controls);\n        if (!keys || keys.length === 0) {\n            return [];\n        }\n        return keys.map(key => group.controls[key]);\n    }\n}\n","module.exports = \"pre {\\n  background-color: lightgrey;\\n}\\n\"","module.exports = \"<h1 mat-dialog-title *ngIf=\\\"data.heading\\\">{{data.heading}}</h1>\\n<div *ngIf=\\\"!data.preformattedJson\\\">\\n  <div mat-dialog-content [ngClass]=\\\"data.size\\\">\\n    <dynamic-form\\n      #modalForm\\n      [layout]=\\\"data.layout\\\"\\n      [entity]=\\\"data.entity\\\"\\n    >\\n    </dynamic-form>\\n  </div>\\n  <div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"returnValue ? returnValue : modalForm.value\\\" tabindex=\\\"2\\\">{{primaryButtonText}}</button>\\n    <button mat-raised-button (click)=\\\"cancel()\\\" tabindex=\\\"-1\\\" *ngIf=\\\"displayCancel()\\\">{{secondaryButtonText}}</button>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"data.preformattedJson\\\">\\n  <div mat-dialog-content [ngClass]=\\\"data.size\\\">\\n  <pre>{{ data.entity | json }}</pre>\\n  </div>\\n  <div *ngIf=\\\"data.preformattedJson\\\"  mat-dialog-actions>\\n    <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"returnValue\\\" tabindex=\\\"2\\\">{{primaryButtonText}}</button>\\n    <button mat-raised-button (click)=\\\"cancel()\\\" tabindex=\\\"-1\\\" *ngIf=\\\"displayCancel()\\\">{{secondaryButtonText}}</button>\\n  </div>\\n\\n</div>\\n\"","import { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { DialogButtons } from '../../enumerations/dialog-buttons';\nimport { DialogConfig } from '../../interfaces/dialog-config';\nimport { DynamicFormComponent } from '../dynamic-form/dynamic-form.component';\n\n@Component({\n  selector: 'dynamic-dynamic-modal-dialog',\n  templateUrl: './dynamic-modal-dialog.component.html',\n  styleUrls: ['./dynamic-modal-dialog.component.css']\n})\nexport class DynamicModalDialogComponent {\n  @ViewChild('form')\n  modalForm: DynamicFormComponent;\n  primaryButtonText = 'Submit';\n  secondaryButtonText = 'Cancel';\n  returnValue?: boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<DynamicModalDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogConfig\n  ) {\n    if (!data.preformattedJson) {\n      data.preformattedJson = false;\n    }\n\n    switch (data.dialogButtons) {\n      case DialogButtons.OK:\n      case DialogButtons.OKCancel:\n        this.primaryButtonText = 'OK';\n        this.returnValue = true;\n        break;\n      case DialogButtons.NextCancel:\n        this.primaryButtonText = 'Next';\n        break;\n      case DialogButtons.SaveCancel:\n        this.primaryButtonText = 'Save';\n        break;\n      case DialogButtons.YesNo:\n        this.primaryButtonText = 'Yes';\n        this.secondaryButtonText = 'No';\n        this.returnValue = true;\n        break;\n    }\n  }\n\n  checkValidity(): boolean {\n    return (\n      this.data.dialogButtons === DialogButtons.NextCancel ||\n      this.data.dialogButtons === DialogButtons.SaveCancel ||\n      this.data.dialogButtons === DialogButtons.SubmitCancel\n    );\n  }\n\n  displayCancel(): boolean {\n    return this.data.dialogButtons !== DialogButtons.OK;\n  }\n\n  cancel(): void {\n    if (\n      this.data.dialogButtons === DialogButtons.OKCancel ||\n      this.data.dialogButtons === DialogButtons.YesNo\n    ) {\n      return this.dialogRef.close(false);\n    }\n    this.dialogRef.close();\n  }\n}\n","module.exports = \".mat-form-field{\\n  width: 400px;\\n}\\n\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-input\\\"\\n  [formGroup]=\\\"group\\\">\\n  <mat-form-field>\\n    <input\\n      matInput\\n      type=\\\"text\\\"\\n      [id]=\\\"id\\\"\\n      [name]=\\\"id\\\"\\n      [placeholder]=\\\"config.label\\\"\\n      [formControlName]=\\\"config.name\\\"\\n      [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n      autocorrect=\\\"off\\\"\\n      autocapitalize=\\\"off\\\"\\n      spellcheck=\\\"off\\\"\\n    >\\n    <mat-hint>{{config.options.hint}}</mat-hint>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('required')\\\">\\n      {{ config.label }} is required.\\n    </mat-error>\\n  </mat-form-field>\\n\\n</ng-container>\\n\"","/// <reference types=\"@types/googlemaps\" />\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { MapsAPILoader } from '@agm/core';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-address',\n  templateUrl: './form-address.component.html',\n  styleUrls: ['./form-address.component.css']\n})\nexport class FormAddressComponent extends DynamicBaseComponent\n  implements OnInit {\n  constructor(private mapsAPILoader: MapsAPILoader) {\n    super();\n  }\n\n  ngOnInit() {\n    // load Places Autocomplete\n    this.mapsAPILoader.load().then(() => {\n      const input: HTMLInputElement = document.getElementById(\n        this.id\n      ) as HTMLInputElement;\n      const autocomplete = new google.maps.places.Autocomplete(input, {\n        types: ['address']\n      });\n      this.geolocate(autocomplete);\n\n      // store control in variable before scope change\n      const control = this.group.get(this.config.name);\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        control.patchValue(place.formatted_address);\n      });\n    });\n\n    super.ngOnInit();\n  }\n\n  geolocate(autocomplete) {\n    // Bias the autocomplete object to the user's geographical location,\n    // as supplied by the browser's 'navigator.geolocation' object.\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        const circle = new google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy\n        });\n        autocomplete.setBounds(circle.getBounds());\n      });\n    }\n  }\n}\n","module.exports = \"button.remove{\\n  display: inline-block;\\n  float: right;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  margin:5px 5px 0 0;\\n}\\nmat-card {\\n  margin: 2px;\\n}\\ndiv.add {\\n  text-align: right;\\n  margin: 5px 5px 0 0;\\n}\"","module.exports = \"<ng-container\\n  [formGroup]=\\\"group\\\"\\n  class=\\\"dynamic-group\\\"\\n>\\n  <div\\n    class=\\\"mimic-mat-placeholder\\\"\\n  ><span>{{config.label}}</span></div>\\n  <div\\n    *ngIf=\\\"!(group.get(config.name).touched && (group.get(config.name).hasError('required') || group.get(config.name).hasError('minlength') || group.get(config.name).hasError('maxlength')))\\\"\\n    class=\\\"mimic-mat-hint\\\"><span>{{config.options.hint}}</span></div>\\n  <div\\n    class=\\\"mimic-mat-error\\\"\\n    *ngIf=\\\"group.get(config.name).hasError('required') && (group.get(config.name).touched)\\\">\\n    <span>Your response is required.</span>\\n  </div>\\n  <div\\n    class=\\\"mimic-mat-error\\\"\\n    *ngIf=\\\"group.get(config.name).hasError('minlength') && (group.get(config.name).touched)\\\">\\n    <span>At least {{config.options.validation.minLength}} {{config.options.validation.minLength===1 ? ' is ' :' are '}}required.</span>\\n  </div>\\n  <div\\n    class=\\\"mimic-mat-error\\\"\\n    *ngIf=\\\"group.get(config.name).hasError('maxlength') && (group.get(config.name).touched)\\\">\\n    <span>No more than {{config.options.validation.maxLength}} {{config.options.validation.maxLength===1 ? ' is ' :' are '}}allowed.</span>\\n  </div>\\n  <ng-container\\n    [formArrayName]=\\\"config.name\\\"\\n  >\\n    <mat-card\\n      *ngFor=\\\"let subgroup of group.get(config.name)['controls']; let i = index;\\\"\\n    >\\n      <button mat-icon-button type=\\\"button\\\" color=\\\"warn\\\" class=\\\"remove\\\" mat-tooltip=\\\"Remove this one\\\" aria-label=\\\"Remove button with icon\\\" (click)=\\\"remove(i)\\\" *ngIf=\\\"!config.options.removeText\\\">\\n        <mat-icon\\n          aria-hidden=\\\"true\\\">remove_circle\\n        </mat-icon>\\n      </button>\\n      \\n      <button mat-raised-button type=\\\"button\\\" color=\\\"warn\\\" class=\\\"remove\\\" mat-tooltip=\\\"Remove this one\\\" aria-label=\\\"Remove button with icon\\\" (click)=\\\"remove(i)\\\"  *ngIf=\\\"config.options.removeText\\\">\\n        <mat-icon\\n          aria-hidden=\\\"true\\\">remove_circle\\n        </mat-icon>\\n         {{config.options.removeText}}\\n      </button>\\n      <div\\n        *ngFor=\\\"let field of config.options.fields;\\\"\\n        dynamicField\\n        [config]=\\\"field\\\"\\n        [group]=\\\"subgroup\\\"\\n      >\\n      </div>\\n    </mat-card>\\n  </ng-container>\\n<div class=\\\"add\\\">\\n  <button mat-mini-fab type=\\\"button\\\" (click)=\\\"add()\\\" mat-tooltip=\\\"Add another\\\" aria-label=\\\"Add button with icon\\\" *ngIf=\\\"!config.options.addText\\\">\\n    <mat-icon\\n      aria-hidden=\\\"true\\\">add\\n    </mat-icon>\\n  </button>\\n  \\n  <button mat-raised-button type=\\\"button\\\" (click)=\\\"add()\\\" color=\\\"accent\\\" mat-tooltip=\\\"Add another\\\" aria-label=\\\"Add button with icon\\\" *ngIf=\\\"config.options.addText\\\">\\n    <mat-icon aria-hidden=\\\"true\\\">add</mat-icon>\\n    {{config.options.addText}}\\n  </button>\\n</div>\\n</ng-container>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\n\nimport { DynamicFormBuilder } from '../../dynamic-form-builder';\nimport { Field } from '../../interfaces/field';\nimport { FieldConfig } from '../../interfaces/field-config';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-array',\n  templateUrl: './form-array.component.html',\n  styleUrls: ['./form-array.component.css']\n})\nexport class FormArrayComponent extends DynamicBaseComponent implements OnInit {\n  fb: DynamicFormBuilder;\n  array: FormArray;\n\n  ngOnInit() {\n    this.fb = new DynamicFormBuilder();\n    this.array = this.group.get(this.config.name) as FormArray;\n    super.ngOnInit();\n  }\n\n  add() {\n    this.array.push(this.fb.createGroup(this.config));\n    this.array.markAsTouched();\n  }\n\n  remove(index) {\n    this.array.removeAt(index);\n    this.array.markAsTouched();\n  }\n}\n","module.exports = \"\\n\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-button\\\"\\n  [formGroup]=\\\"group\\\">\\n  <button\\n    mat-raised-button\\n    color=\\\"primary\\\"\\n    type=\\\"submit\\\"\\n    [id]=\\\"config.name\\\"\\n    [name]=\\\"config.name\\\"\\n  >{{ config.label }}\\n  </button>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../../interfaces/field';\nimport { FieldConfig } from '../../interfaces/field-config';\n\n@Component({\n  selector: 'dynamic-form-button',\n  templateUrl: './form-button.component.html',\n  styleUrls: ['./form-button.component.css']\n})\nexport class FormButtonComponent implements Field {\n  config: FieldConfig;\n  group: FormGroup;\n\n  setValidators() {\n    // do nothing\n  }\n}\n","module.exports = \":host ::ng-deep .dynamic-field {\\n  margin: 5px !important;\\n}\\n\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-group\\\"\\n  *ngIf=\\\"showIf()\\\"\\n>\\n  <span\\n    class=\\\"mimic-mat-placeholder mimic-mat-label\\\"\\n    [ngClass]=\\\"{'mat-error': group.get(config.name).hasError('requiredMin') && group.get(config.name).touched}\\\">\\n    {{config.label}}<span *ngIf=\\\"config.options.validation.requiredMin\\\"> *</span> </span>\\n  \\n  <div class=\\\"mimic-mat-hint\\\">{{config.options.hint}}</div>    \\n  \\n  <div\\n    class=\\\"mimic-mat-error\\\"\\n    *ngIf=\\\"group.get(config.name).hasError('requiredMin') && (group.get(config.name).touched)\\\">\\n    <span>At least {{config.options.validation.requiredMin}} selection{{config.options.validation.requiredMin===1 ? ' is ' :'s are '}}required.</span>\\n  </div>\\n  <div\\n    *ngFor=\\\"let field of config.options.fields;\\\"\\n    dynamicField\\n    [config]=\\\"field\\\"\\n    [group]=\\\"group.get(config.name)\\\"\\n  >\\n  </div>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-checkbox-group',\n  templateUrl: './form-checkbox-group.component.html',\n  styleUrls: ['./form-checkbox-group.component.css']\n})\nexport class FormCheckboxGroupComponent extends DynamicBaseComponent {}\n","module.exports = \"\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-input\\\"\\n  [formGroup]=\\\"group\\\"\\n  *ngIf=\\\"showIf()\\\"\\n  >\\n  <mat-checkbox\\n    [id]=\\\"id\\\"\\n    [name]=\\\"id\\\"\\n    [formControlName]=\\\"config.name\\\"\\n    [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n    [labelPosition]=\\\"(config.options && config.options.align) || 'after'\\\"\\n    [indeterminate]=\\\"config.options.indeterminate\\\"\\n    (change)=\\\"change();\\\"\\n  >\\n    <span\\n      [ngClass]=\\\"{'mat-error' : group.get(config.name).hasError('required') && group.get(config.name).touched}\\\"\\n    >{{config.label}}<span\\n      *ngIf=\\\"config.options.validation.required\\\"\\n    > *</span></span>\\n  </mat-checkbox>\\n  <div\\n    class=\\\"mimic-mat-error\\\"\\n    *ngIf=\\\"group.get(config.name).hasError('required') && group.get(config.name).touched\\\">\\n    <span>Your response is required.</span>\\n  </div>\\n  <ng-container\\n    *ngIf=\\\"specifyConfig() && !!group.get(config.name).value\\\"\\n    dynamicField\\n    [group]=\\\"group\\\"\\n    [config]=\\\"config.options.specify\\\"\\n  ></ng-container>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\n\nimport { FieldConfig } from '../../interfaces/field-config';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-checkbox',\n  templateUrl: './form-checkbox.component.html',\n  styleUrls: ['./form-checkbox.component.css']\n})\nexport class FormCheckboxComponent extends DynamicBaseComponent {\n  getConfig() {\n    return this.config;\n  }\n\n  specifyConfig(): FieldConfig {\n    return this.config.options &&\n      this.config.options.specify &&\n      this.config.options.specify.type &&\n      this.config.options.specify.name\n      ? this.config.options.specify\n      : undefined;\n  }\n\n  change() {\n    const spec = this.specifyConfig();\n\n    // if value cleared & spec exists, then clear spec value too\n    if (!this.group.get(this.config.name).value) {\n      if (spec && this.group.get(spec.name)) {\n        this.group.get(spec.name).reset();\n        this.group.get(spec.name).disable();\n      }\n    } else {\n      if (spec && this.group.get(spec.name)) {\n        this.group.get(spec.name).enable();\n      }\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-input\\\"\\n  [formGroup]=\\\"group\\\"\\n  *ngIf=\\\"showIf()\\\">\\n  <mat-form-field>\\n    <input\\n      matInput\\n      [matDatepicker]=\\\"picker\\\"\\n      [formControlName]=\\\"config.name\\\"\\n      [id]=\\\"id\\\"\\n      [name]=\\\"id\\\"\\n      [placeholder]=\\\"config.label\\\"\\n      [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n      [min]=\\\"minDate\\\"\\n      [max]=\\\"maxDate\\\"\\n      minDate=\\\"{{minDate}}\\\"\\n      maxDate=\\\"{{maxDate}}\\\"\\n      [matDatepickerFilter]=\\\"dateFilter\\\"\\n      maxlength=\\\"10\\\"\\n    >\\n    <mat-datepicker-toggle\\n      matSuffix\\n      [for]=\\\"picker\\\"\\n    ></mat-datepicker-toggle>\\n\\n    <mat-datepicker\\n      #picker\\n      [startAt]=\\\"startAt\\\"\\n    ></mat-datepicker>\\n    <mat-hint>{{config.options.hint}}</mat-hint>\\n\\n    <mat-error\\n      *ngIf=\\\"group.get(config.name).hasError('required')\\\">\\n      {{ config.label }} is required.\\n    </mat-error>\\n    <mat-error\\n      *ngIf=\\\"group.get(config.name).hasError('min') || group.get(config.name).hasError('matDatepickerMin')\\\">\\n      {{ config.label }} must be on or after {{ minDateString }}.\\n    </mat-error>\\n    <mat-error\\n      *ngIf=\\\"group.get(config.name).hasError('max') ||  group.get(config.name).hasError('matDatepickerMax')\\\">\\n      {{ config.label }} must be on or before {{ maxDateString }}.\\n    </mat-error>\\n    <mat-error\\n      *ngIf=\\\"group.get(config.name).hasError('matDatepickerParse') ||  group.get(config.name).hasError('matDatepickerMax')\\\">\\n      {{ config.label }} must be a valid date.\\n    </mat-error>\\n    <mat-error\\n      *ngIf=\\\"group.get(config.name).hasError('matDatepickerFilter ')\\\">\\n      {{ config.label }} must contain a valid date...filter.\\n    </mat-error>\\n\\n  </mat-form-field>\\n</ng-container>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n    selector: 'dynamic-form-date',\n    templateUrl: './form-date.component.html',\n    styleUrls: ['./form-date.component.css']\n})\nexport class FormDateComponent extends DynamicBaseComponent implements OnInit {\n    startAt?: Date;\n    minDate?: Date;\n    maxDate?: Date;\n    minDateString?: string;\n    maxDateString?: string;\n\n    ngOnInit(): void {\n        this.startAt = this.buildDate(this.config.options.startAt);\n        this.minDate = this.buildDate(this.config.options.validation.minDate);\n        this.maxDate = this.buildDate(this.config.options.validation.maxDate);\n        this.minDateString = this.formatDateString(this.minDate);\n        this.maxDateString = this.formatDateString(this.maxDate);\n        super.ngOnInit();\n    }\n\n    buildDate(attr) {\n        return attr && attr.year && attr.month && attr.day\n            ? new Date(attr.year, attr.month, attr.day)\n            : undefined;\n    }\n\n    formatDateString(date: Date): string {\n        // TODO: allow for other date formats\n        return (\n            date &&\n            `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`\n        );\n    }\n\n    dateFilter(d: Date): boolean {\n        return true;\n        // TODO allow custom date validation functions\n    }\n}\n","module.exports = \"\\n\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field\\\"\\n  [formGroup]=\\\"group\\\">\\n  <mat-form-field>\\n    <input\\n      matInput\\n      type=\\\"email\\\"\\n      [id]=\\\"id\\\"\\n      [name]=\\\"id\\\"\\n      [placeholder]=\\\"config.label\\\"\\n      [formControlName]=\\\"config.name\\\"\\n      [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n      [pattern]=\\\"pattern()\\\"\\n    >\\n\\n    <mat-hint>{{config.options.hint}}</mat-hint>\\n\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('required')\\\">\\n      {{ config.label }} is required.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('pattern') || group.get(config.name).hasError('email')\\\">\\n      Please provide a valid email address.\\n    </mat-error>\\n\\n  </mat-form-field>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\n\nimport { EmailConfig } from '../../../element-config';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-email',\n  templateUrl: './form-email.component.html',\n  styleUrls: ['./form-email.component.css']\n})\nexport class FormEmailComponent extends DynamicBaseComponent {\n  pattern(): string {\n    return EmailConfig.pattern;\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-expansion-panel class=\\\"dynamic-group\\\">\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n      {{config.label}}\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      {{config.options.hint}}\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n  <div\\n    *ngFor=\\\"let field of config.options.fields;\\\"\\n    dynamicField\\n    [config]=\\\"field\\\"\\n    [group]=\\\"group.get(config.name)\\\"\\n  >\\n  </div>\\n</mat-expansion-panel>\\n\"","import { Component } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-expansion-panel',\n  templateUrl: './form-expansion-panel.component.html',\n  styleUrls: ['./form-expansion-panel.component.css']\n})\nexport class FormExpansionPanelComponent extends DynamicBaseComponent {}\n","module.exports = \"\"","module.exports = \"<fieldset\\n  class=\\\"dynamic-group\\\"\\n>\\n  <legend>{{config.label}}</legend>\\n  <div\\n    *ngFor=\\\"let field of config.options.fields;\\\"\\n    dynamicField\\n    [config]=\\\"field\\\"\\n    [group]=\\\"group.get(config.name)\\\">\\n  </div>\\n</fieldset>\\n\"","import { Component } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-fieldset',\n  templateUrl: './form-fieldset.component.html',\n  styleUrls: ['./form-fieldset.component.css']\n})\nexport class FormFieldSetComponent extends DynamicBaseComponent {}\n","module.exports = \"\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field\\\"\\n  [ngSwitch]=\\\"config.options.level\\\">\\n  <h1 *ngSwitchCase=\\\"1\\\">{{config.label}}</h1>\\n  <h2 *ngSwitchCase=\\\"2\\\">{{config.label}}</h2>\\n  <h3 *ngSwitchCase=\\\"3\\\">{{config.label}}</h3>\\n  <h4 *ngSwitchCase=\\\"4\\\">{{config.label}}</h4>\\n  <h5 *ngSwitchCase=\\\"5\\\">{{config.label}}</h5>\\n  <h6 *ngSwitchCase=\\\"6\\\">{{config.label}}</h6>\\n  <span *ngSwitchDefault>{{config.label}}</span>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../../interfaces/field';\nimport { FieldConfig } from '../../interfaces/field-config';\n\n@Component({\n  selector: 'dynamic-form-heading',\n  templateUrl: './form-heading.component.html',\n  styleUrls: ['./form-heading.component.css']\n})\nexport class FormHeadingComponent implements Field {\n  config: FieldConfig;\n  group: FormGroup;\n}\n","module.exports = \"\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-input\\\"\\n  [formGroup]=\\\"group\\\">\\n  <mat-form-field>\\n    <input\\n      matInput\\n      type=\\\"number\\\"\\n      [id]=\\\"id\\\"\\n      [name]=\\\"id\\\"\\n      [placeholder]=\\\"config.label\\\"\\n      [formControlName]=\\\"config.name\\\"\\n      [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n      minNumber=\\\"{{config.options.validation.min}}\\\"\\n      maxNumber=\\\"{{config.options.validation.max}}\\\"\\n    >\\n    <mat-hint>{{config.options.hint}}</mat-hint>\\n\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('required')\\\">\\n      {{ config.label }} is required.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('min')\\\">\\n      {{ config.label }} must be at least {{config.options.validation.min}}.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('max')\\\">\\n      {{ config.label }} must be no more than {{config.options.validation.max}}.\\n    </mat-error>\\n  </mat-form-field>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-number',\n  templateUrl: './form-number.component.html',\n  styleUrls: ['./form-number.component.css']\n})\nexport class FormNumberComponent extends DynamicBaseComponent {}\n","module.exports = \"\"","module.exports = \"<ng-container class=\\\"dynamic-field\\\">\\n  <mat-form-field\\n    class=\\\"form-input\\\"\\n    [formGroup]=\\\"group\\\">\\n\\n    <input\\n      matInput\\n      type=\\\"password\\\"\\n      [id]=\\\"id\\\"\\n      [name]=\\\"id\\\"\\n      [placeholder]=\\\"config.label\\\"\\n      [formControlName]=\\\"config.name\\\"\\n      [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n      [pattern]=\\\"config.options.validation.pattern\\\"\\n      [minlength]=\\\"config.options.validation.minLength\\\"\\n      [maxlength]=\\\"config.options.validation.maxLength\\\"\\n    >\\n    <mat-hint>{{config.options.hint}}</mat-hint>\\n\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('required')\\\">\\n      {{ config.label }} is required.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('pattern')\\\">\\n      {{ config.label }} should follow the pattern of {{config.options.validation.pattern}}.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('minlength')\\\">\\n      {{ config.label }} must have length of at least {{config.options.validation.minLength}}.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('maxlength')\\\">\\n      {{ config.label }} must have length of no more than {{config.options.validation.maxLength}}.\\n    </mat-error>\\n  </mat-form-field>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-password',\n  templateUrl: './form-password.component.html',\n  styleUrls: ['./form-password.component.css']\n})\nexport class FormPasswordComponent extends DynamicBaseComponent {}\n","module.exports = \".radio-group {\\n  display: inline-flex;\\n}\\n\\n.radio-group.vertical {\\n  flex-direction: column;\\n}\\n\\n.radio-group.horizontal {\\n  flex-direction: row;\\n}\\n\\n.radio-button {\\n  margin: 5px;\\n}\\n\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field\\\"\\n  [formGroup]=\\\"group\\\"\\n   *ngIf=\\\"showIf()\\\">\\n  <mat-radio-group\\n    class=\\\"radio-group\\\"\\n    [ngClass]=\\\"[ config.options.vertical ? 'vertical' : 'horiztonal']\\\"\\n    [id]=\\\"id\\\"\\n    [name]=\\\"id\\\"\\n    [formControlName]=\\\"config.name\\\"\\n    [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n    (change)=\\\"change()\\\"\\n  >\\n    <span\\n    class=\\\"mimic-mat-placeholder mimic-mat-label\\\"\\n    [ngClass]=\\\"{'mat-error': group.get(config.name).hasError('required') && group.get(config.name).touched}\\\">\\n    {{config.label}}<span *ngIf=\\\"config.options.validation.required || requiredIf()\\\"> *</span> </span>\\n    \\n    <div class=\\\"mimic-mat-hint\\\">{{config.options.hint}}</div>    \\n      \\n    <div\\n      class=\\\"mimic-mat-error\\\"\\n      *ngIf=\\\"group.get(config.name).hasError('required') && (group.get(config.name).touched)\\\">\\n      <span>Your response is required.</span>\\n    </div>\\n    <ng-container\\n      *ngFor=\\\"let item of config.options.items\\\">\\n      <mat-radio-button\\n        class=\\\"radio-button\\\"\\n        [style.width.%]=\\\"width\\\"\\n        [value]=\\\"item.value\\\"\\n      >{{item.label}}\\n      </mat-radio-button>\\n\\n      <ng-container\\n        *ngIf=\\\"group.get(config.name).value === item.value && specifyConfig(item.value)\\\"\\n        dynamicField\\n        [group]=\\\"group\\\"\\n        [config]=\\\"specifyConfig(item.value)\\\"\\n      ></ng-container>\\n\\n      </ng-container>\\n  </mat-radio-group>\\n</ng-container>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { Field } from '../../interfaces/field';\nimport { FieldConfig } from '../../interfaces/field-config';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-radio',\n  templateUrl: './form-radio.component.html',\n  styleUrls: ['./form-radio.component.css']\n})\nexport class FormRadioComponent extends DynamicBaseComponent implements OnInit {\n  width = 100;\n  isList = false;\n\n  ngOnInit(): void {\n    this.isList = this.config.options.items.length > 1;\n    super.ngOnInit();\n  }\n\n  specifyConfig(value: string): FieldConfig {\n    const selected = this.config.options.items.find(\n      item => item.value === value\n    );\n\n    return selected &&\n      selected.options &&\n      selected.options.specify &&\n      selected.options.specify.type &&\n      selected.options.specify.name\n      ? selected.options.specify\n      : undefined;\n  }\n\n  change() {\n    // clear any spec values unrelated to current selection\n    const value = this.group.get(this.config.name).value;\n    this.config.options.items\n      .filter(item => item.value !== value)\n      .forEach(item => {\n        const spec = this.specifyConfig(item.value);\n        if (spec && this.group.get(spec.name)) {\n          this.group.get(spec.name).reset();\n          this.group.get(spec.name).disable();\n        }\n      });\n\n    this.config.options.items\n      .filter(item => item.value === value)\n      .forEach(item => {\n        const spec = this.specifyConfig(item.value);\n        if (spec && this.group.get(spec.name)) {\n          this.group.get(spec.name).enable();\n        }\n      });\n  }\n}\n","module.exports = \"\\n\\n\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-select\\\"\\n  [formGroup]=\\\"group\\\"\\n  *ngIf=\\\"showIf()\\\"\\n  >\\n  <mat-form-field>\\n    <mat-select\\n      [id]=\\\"id\\\"\\n      [placeholder]=\\\"config.label\\\"\\n      [formControlName]=\\\"config.name\\\"\\n      [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n      (change)=\\\"change()\\\"\\n    >\\n      <mat-option class=\\\"mat-option-disabled\\\">{{config.options.hint}}</mat-option>\\n      <mat-option *ngFor=\\\"let item of config.options.items\\\"\\n                  [value]=\\\"item.value\\\">{{ item.label }}\\n      </mat-option>\\n    </mat-select>\\n    \\n   <mat-hint>{{config.options.hint}}</mat-hint>\\n      <mat-error\\n    *ngIf=\\\"group.get(config.name).hasError('required') && (group.get(config.name).touched)\\\"\\n  >\\n    <span>{{config.label}} is required.</span>\\n  </mat-error>\\n  </mat-form-field>\\n</ng-container>\\n<div></div>\\n<ng-container\\n  *ngIf=\\\"!!group.get(config.name).value && specifyConfig(group.get(config.name).value)\\\"\\n  dynamicField\\n  [group]=\\\"group\\\"\\n  [config]=\\\"specifyConfig(group.get(config.name).value)\\\"\\n></ng-container>\\n\"","import { Component } from '@angular/core';\n\nimport { FieldConfig } from '../../interfaces/field-config';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-select',\n  templateUrl: './form-select.component.html',\n  styleUrls: ['./form-select.component.css']\n})\nexport class FormSelectComponent extends DynamicBaseComponent {\n  specifyConfig(value: string): FieldConfig {\n    const selected = this.config.options.items.find(\n      item => item.value === value\n    );\n\n    return selected &&\n      selected.options &&\n      selected.options.specify &&\n      selected.options.specify.type\n      ? selected.options.specify\n      : undefined;\n  }\n\n  change() {\n    // clear any spec values unrelated to current selection\n    const value = this.group.get(this.config.name).value;\n    this.config.options.items\n      .filter(item => item.value !== value)\n      .forEach(item => {\n        const spec = this.specifyConfig(item.value);\n        if (spec && this.group.get(spec.name)) {\n          this.group.get(spec.name).reset();\n          this.group.get(spec.name).disable();\n        }\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-input\\\"\\n  [formGroup]=\\\"group\\\">\\n  <mat-slide-toggle\\n    [id]=\\\"id\\\"\\n    [name]=\\\"id\\\"\\n    [formControlName]=\\\"config.name\\\"\\n    [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n    [labelPosition]=\\\"config.options.align || 'after'\\\"\\n    [color]=\\\"config.options.color || 'accent'\\\">\\n    <span\\n      [ngClass]=\\\"{'mat-error' : group.get(config.name).hasError('required') && group.get(config.name).touched}\\\"\\n    >{{config.label}}<span *ngIf=\\\"config.options.validation.required\\\"> *</span></span>\\n  </mat-slide-toggle>\\n\\n  <div\\n    class=\\\"mimic-mat-error\\\"\\n    *ngIf=\\\"group.get(config.name).hasError('required') && group.get(config.name).touched\\\">\\n    <span>Your response is required.</span>\\n  </div>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-slide-toggle',\n  templateUrl: './form-slide-toggle.component.html',\n  styleUrls: ['./form-slide-toggle.component.css']\n})\nexport class FormSlideToggleComponent extends DynamicBaseComponent {}\n","module.exports = \"mat-slider{\\n  width: 200px;\\n}\\n\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-input\\\"\\n  [formGroup]=\\\"group\\\">\\n  <div>\\n    <label\\n      class=\\\"mimic-mat-placeholder\\\"\\n      [ngClass]=\\\"{'mat-error': (group.get(config.name).hasError('required') || group.get(config.name).hasError('required')) && group.get(config.name).touched }\\\"\\n    >{{config.label}}<span *ngIf=\\\"config.options.validation.required\\\"> *</span> </label>\\n  </div>\\n  <mat-slider\\n    [id]=\\\"id\\\"\\n    [formControlName]=\\\"config.name\\\"\\n    [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n    [min]=\\\"config.options.validation.min\\\"\\n    [max]=\\\"config.options.validation.max\\\"\\n    [invert]=\\\"config.options.invert\\\"\\n    [vertical]=\\\"config.options.vertical\\\"\\n    [step]=\\\"config.options.step\\\"\\n    [thumbLabel]=\\\"config.options.thumbLabel\\\"\\n    [tickInterval]=\\\"config.options.tickInterval\\\"\\n  >\\n  </mat-slider>\\n  <div\\n    class=\\\"mimic-mat-error\\\"\\n    *ngIf=\\\"group.get(config.name).hasError('required') && (group.get(config.name).touched)\\\">\\n    <span>{{config.label}} is required.</span>\\n  </div>\\n</ng-container>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-slider',\n  templateUrl: './form-slider.component.html',\n  styleUrls: ['./form-slider.component.css']\n})\nexport class FormSliderComponent extends DynamicBaseComponent {}\n","module.exports = \"\\n\\n\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-states\\\"\\n  [formGroup]=\\\"group\\\"\\n  *ngIf=\\\"showIf()\\\"\\n  >\\n  <mat-form-field>\\n    <mat-select\\n      [id]=\\\"id\\\"\\n      [placeholder]=\\\"config.label\\\"\\n      [formControlName]=\\\"config.name\\\"\\n      [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n    >\\n      <mat-option class=\\\"mat-option-disabled\\\">{{config.options.hint}}</mat-option>\\n      <mat-option *ngFor=\\\"let item of config.options.states\\\"\\n                  [value]=\\\"item.value\\\">{{ item.label }}\\n      </mat-option>\\n    </mat-select>\\n    \\n    <mat-hint>{{config.options.hint}}</mat-hint>\\n      <mat-error\\n    *ngIf=\\\"group.get(config.name).hasError('required') && (group.get(config.name).touched)\\\"\\n  >\\n    <span>{{config.label}} is required.</span>\\n  </mat-error>\\n  </mat-form-field>\\n</ng-container>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { StatesConfig } from '../../../element-config/config/states';\nimport { FieldConfig } from '../../interfaces/field-config';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-states',\n  templateUrl: './form-states.component.html',\n  styleUrls: ['./form-states.component.css']\n})\nexport class FormStatesComponent extends DynamicBaseComponent\n  implements OnInit {\n  ngOnInit() {\n    this.config.options.states = StatesConfig.states;\n    super.ngOnInit();\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-expansion-panel class=\\\"dynamic-group\\\">\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>\\n      {{config.label}}\\n    </mat-panel-title>\\n    <mat-panel-description>\\n      {{config.options.hint}}\\n    </mat-panel-description>\\n  </mat-expansion-panel-header>\\n  <div\\n    *ngFor=\\\"let field of config.options.fields;\\\"\\n    dynamicField\\n    [config]=\\\"field\\\"\\n    [group]=\\\"group.get(config.name)\\\"\\n  >\\n  </div>\\n</mat-expansion-panel>\\n\"","import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../../interfaces/field';\nimport { FieldConfig } from '../../interfaces/field-config';\n\n@Component({\n  selector: 'dynamic-form-static-panel',\n  templateUrl: './form-static-panel.component.html',\n  styleUrls: ['./form-static-panel.component.css']\n})\nexport class FormStaticPanelComponent implements Field {\n  config: FieldConfig;\n  group: FormGroup;\n}\n","module.exports = \"\"","module.exports = \"<ng-container class=\\\"dynamic-field\\\" *ngIf=\\\"showIf()\\\">\\n  <div [innerHtml]=\\\"config.label\\\"></div>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-static',\n  templateUrl: './form-static.component.html',\n  styleUrls: ['./form-static.component.css']\n})\nexport class FormStaticComponent extends DynamicBaseComponent {}\n","module.exports = \"\"","module.exports = \"<ng-container class=\\\"dynamic-field\\\">\\n  <mat-form-field class=\\\"form-input\\\" [formGroup]=\\\"group\\\">\\n\\n    <input matInput [type]=\\\"config.type === 'phone' ? 'tel' : 'text'\\\"     \\n      [id]=\\\"id\\\"\\n      [name]=\\\"id\\\" \\n      [placeholder]=\\\"config.label\\\" \\n      [formControlName]=\\\"config.name\\\" \\n      [required]=\\\"config.options.validation.required || requiredIf()\\\" \\n      [pattern]=\\\"pattern()\\\"\\n      [minlength]=\\\"config.options.validation.minLength\\\" \\n      [maxlength]=\\\"config.options.validation.maxLength\\\" \\n      mask=\\\"{{inputMask()}}\\\">\\n\\n    <mat-hint>{{hint()}}</mat-hint>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('required')\\\">\\n      {{ config.label }} is required.\\n    </mat-error>\\n\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('minlength')\\\">\\n      {{ config.label }} must have length of at least {{config.options.validation.minLength}}.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('maxlength')\\\">\\n      {{ config.label }} must have length of no more than {{config.options.validation.maxLength}}.\\n    </mat-error>\\n\\n  </mat-form-field>\\n  <mat-error *ngIf=\\\"group.get(config.name).hasError('pattern')\\\" [innerHtml]=\\\"patternValidationMessage()\\\" class=\\\"mimic-mat-error\\\">\\n  </mat-error>\\n</ng-container>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport {\n  ElementType,\n  PhoneConfig,\n  SsnConfig,\n  TimeConfig,\n  ZipConfig\n} from '../../../element-config';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-text-mask',\n  templateUrl: './form-text-mask.component.html',\n  styleUrls: ['./form-text-mask.component.css']\n})\nexport class FormTextMaskComponent extends DynamicBaseComponent {\n  hint(): string {\n    return this.config.type === ElementType.Phone\n      ? PhoneConfig.hint\n      : this.config.type === ElementType.Ssn\n        ? SsnConfig.hint\n        : this.config.type === ElementType.Time\n          ? TimeConfig.hint\n          : this.config.type === ElementType.Zip\n            ? ZipConfig.hint\n            : this.config.options.hint;\n  }\n  inputMask(): string {\n    return this.config.type === ElementType.Phone\n      ? PhoneConfig.inputMask\n      : this.config.type === ElementType.Ssn\n        ? SsnConfig.inputMask\n        : this.config.type === ElementType.Time\n          ? TimeConfig.inputMask\n          : this.config.type === ElementType.Zip\n            ? ZipConfig.inputMask\n            : this.config.options.inputMask;\n  }\n  pattern(): string {\n    return this.config.type === ElementType.Phone\n      ? PhoneConfig.pattern\n      : this.config.type === ElementType.Ssn\n        ? SsnConfig.pattern\n        : this.config.type === ElementType.Time\n          ? TimeConfig.pattern\n          : this.config.type === ElementType.Zip\n            ? ZipConfig.pattern\n            : this.config.options.validation.pattern;\n  }\n  patternValidationMessage(): string {\n    return this.config.type === ElementType.Phone\n      ? PhoneConfig.patternValMsg\n      : this.config.type === ElementType.Ssn\n        ? SsnConfig.patternValMsg\n        : this.config.type === ElementType.Time\n          ? TimeConfig.patternValMsg\n          : this.config.type === ElementType.Zip\n            ? ZipConfig.patternValMsg\n            : this.config.options.validation.patternValMsg ||\n              `${this.config.label} should follow the pattern of ${\n                this.config.options.validation.pattern\n              }.`;\n  }\n  dropSpecialCharacters() {\n    return this.config.type === ElementType.Time ? false : true;\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng-container class=\\\"dynamic-field\\\" *ngIf=\\\"showIf()\\\">\\n  <mat-form-field\\n    class=\\\"form-input\\\"\\n    [formGroup]=\\\"group\\\">\\n\\n    <input\\n      matInput\\n      type=\\\"text\\\"\\n      [id]=\\\"id\\\"\\n      [name]=\\\"id\\\"\\n      [placeholder]=\\\"config.label\\\"\\n      [formControlName]=\\\"config.name\\\"\\n      [required]=\\\"config.options.validation.required || requiredIf()\\\"\\n      [pattern]=\\\"config.options.validation.pattern\\\"\\n      [minlength]=\\\"config.options.validation.minLength\\\"\\n      [maxlength]=\\\"config.options.validation.maxLength\\\"\\n      [matAutocomplete]=\\\"auto\\\"\\n    >\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n      <mat-option\\n        *ngFor=\\\"let item of filteredItems | async\\\"\\n        [value]=\\\"item\\\"\\n      >\\n        <span>{{ item }}</span>\\n      </mat-option>\\n    </mat-autocomplete>\\n    <mat-hint>{{config.options.hint}}</mat-hint>\\n\\n    <mat-error *ngIf=\\\"group.get(config.name) && group.get(config.name).hasError('required')\\\">\\n      {{ config.label }} is required.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name) && group.get(config.name).hasError('pattern')\\\">\\n      {{ config.label }} should follow the pattern of {{config.options.validation.pattern}}.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name) && group.get(config.name).hasError('minlength')\\\">\\n      {{ config.label }} must have length of at least {{config.options.validation.minLength}}.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name) && group.get(config.name).hasError('maxlength')\\\">\\n      {{ config.label }} must have length of no more than {{config.options.validation.maxLength}}.\\n    </mat-error>\\n  </mat-form-field>\\n</ng-container>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { FieldConfig } from '../../interfaces/field-config';\nimport { ItemConfig } from '../../interfaces/item-config';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-text',\n  templateUrl: './form-text.component.html',\n  styleUrls: ['./form-text.component.css']\n})\nexport class FormTextComponent extends DynamicBaseComponent implements OnInit {\n  filteredItems: Observable<any[]>;\n  items: string[];\n\n  ngOnInit() {\n    if (\n      this.config &&\n      this.config.options &&\n      !!this.config.options.autocomplete &&\n      this.group &&\n      this.group.get(this.config.name)\n    ) {\n      this.items = this.getItems(this.config.options.items);\n      this.filteredItems = this.group\n        .get(this.config.name)\n        .valueChanges.pipe(startWith(null))\n        .pipe(map(text => this.filterItems(text)));\n    }\n    super.ngOnInit();\n  }\n\n  getItems(config: ItemConfig[]): string[] {\n    return config ? config.map(item => item.label) : [];\n  }\n\n  filterItems(text: string) {\n    return !text\n      ? this.items.slice()\n      : this.items.filter(\n          i => i.toLowerCase().indexOf(text.toLowerCase()) === 0\n        );\n  }\n}\n","module.exports = \".mat-form-field{\\n  width: 100%;\\n}\\n\"","module.exports = \"<ng-container\\n  class=\\\"dynamic-field form-input\\\"\\n  [formGroup]=\\\"group\\\">\\n\\n  <span\\n    class=\\\"mimic-mat-placeholder\\\"\\n    [ngClass]=\\\"{'mat-error': group.get(config.name).hasError('required') && group.get(config.name).touched}\\\">\\n    {{config.label}}<span *ngIf=\\\"config.options.validation.required\\\"> *</span> </span>\\n\\n  <ngx-trumbowyg-editor\\n    [formControlName]=\\\"config.name\\\"\\n    [placeholder]=\\\"config.label\\\"\\n    [required]=\\\"config.options.validation.required || requiredIf()\\\">\\n  </ngx-trumbowyg-editor>\\n\\n  <div class=\\\"mimic-mat-hint\\\">{{config.options.hint}}</div>\\n\\n  <div class=\\\"mimic-mat-error\\\"\\n       *ngIf=\\\"group.get(config.name).hasError('required') && group.get(config.name).touched\\\">\\n    {{ config.label }} is required.\\n  </div>\\n</ng-container>\\n\\n\\n\"","import { Component } from '@angular/core';\n\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-textarea',\n  templateUrl: './form-textarea.component.html',\n  styleUrls: ['./form-textarea.component.css']\n})\nexport class FormTextareaComponent extends DynamicBaseComponent {}\n","module.exports = \"\"","module.exports = \"<ng-container class=\\\"dynamic-field\\\">\\n  <mat-form-field class=\\\"form-input\\\" [formGroup]=\\\"group\\\">\\n\\n    <input matInput \\n      type=\\\"text\\\"    \\n      [id]=\\\"id\\\"\\n      [name]=\\\"id\\\" \\n      [placeholder]=\\\"config.label\\\" \\n      [formControlName]=\\\"config.name\\\" \\n      [required]=\\\"config.options.validation.required || requiredIf()\\\" \\n      [pattern]=\\\"pattern()\\\"\\n      [minlength]=\\\"config.options.validation.minLength\\\" \\n      [maxlength]=\\\"config.options.validation.maxLength\\\" \\n      mask=\\\"{{inputMask()}}\\\"\\n      dropSpecialCharacters=\\\"false\\\">\\n\\n    <mat-hint>{{hint()}}</mat-hint>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('required')\\\">\\n      {{ config.label }} is required.\\n    </mat-error>\\n\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('minlength')\\\">\\n      {{ config.label }} must have length of at least {{config.options.validation.minLength}}.\\n    </mat-error>\\n    <mat-error *ngIf=\\\"group.get(config.name).hasError('maxlength')\\\">\\n      {{ config.label }} must have length of no more than {{config.options.validation.maxLength}}.\\n    </mat-error>\\n\\n  </mat-form-field>\\n  <mat-error *ngIf=\\\"group.get(config.name).hasError('pattern')\\\" [innerHtml]=\\\"patternValidationMessage()\\\" class=\\\"mimic-mat-error\\\">\\n  </mat-error>\\n</ng-container>\\n\"","import { Component } from '@angular/core';\n\nimport { TimeConfig } from '../../../element-config';\nimport { DynamicBaseComponent } from '../dynamic-base-component';\n\n@Component({\n  selector: 'dynamic-form-time',\n  templateUrl: './form-time.component.html',\n  styleUrls: ['./form-time.component.css']\n})\nexport class FormTimeComponent extends DynamicBaseComponent {\n  hint(): string {\n    return TimeConfig.hint;\n  }\n  inputMask(): string {\n    return TimeConfig.inputMask;\n  }\n  pattern(): string {\n    return TimeConfig.pattern;\n  }\n  patternValidationMessage(): string {\n    return TimeConfig.patternValMsg;\n  }\n}\n","module.exports = \".fill-space {\\n  flex: 1 1 auto;\\n}\\n\"","module.exports = \"<ng-container\\n  [formGroup]=\\\"group\\\"\\n  class=\\\"dynamic-group\\\"\\n>\\n  <ng-container>\\n    <mat-toolbar>\\n      <button\\n        mat-button\\n        mat-icon-button\\n        type=\\\"button\\\"\\n        (click)=\\\"add()\\\"\\n        mat-tooltip=\\\"Add element\\\"\\n      >\\n        <mat-icon aria-hidden=\\\"true\\\">add circle</mat-icon>\\n      </button>\\n\\n      <button\\n        mat-button\\n        mat-icon-button\\n        type=\\\"button\\\"\\n        (click)=\\\"viewSource()\\\"\\n        [disabled]=\\\"!config.options.fields\\\"\\n        mat-tooltip=\\\"View source\\\"\\n      >\\n        <mat-icon aria-hidden=\\\"true\\\">code</mat-icon>\\n      </button>\\n\\n      <button\\n        mat-button\\n        mat-icon-button\\n        type=\\\"button\\\"\\n        (click)=\\\"preview()\\\"\\n        [disabled]=\\\"!config.options.fields || config.options.fields.length === 0\\\"\\n        mat-tooltip=\\\"Preview\\\"\\n      >\\n        <mat-icon aria-hidden=\\\"true\\\">launch</mat-icon>\\n      </button>\\n    </mat-toolbar>\\n  </ng-container>\\n  <ng-container\\n    [formArrayName]=\\\"config.name\\\"\\n  >\\n    <mat-expansion-panel\\n      *ngFor=\\\"let subgroup of group.get(config.name)['controls']; let i = index;\\\"\\n    >\\n      <mat-expansion-panel-header>\\n        <mat-panel-description>{{getElementLabel(config.options.fields[i], subgroup)}}</mat-panel-description>\\n        {{getElementHeading(config.options.fields[i])}}\\n        <span class=\\\"fill-space\\\"></span>\\n        <button\\n          mat-button\\n          mat-icon-button\\n          type=\\\"button\\\"\\n          (click)=\\\"moveElement(i, 'up')\\\"\\n          [disabled]=\\\"i === 0\\\"\\n          mat-tooltip=\\\"Move element up\\\"\\n        >\\n          <mat-icon aria-hidden=\\\"true\\\">arrow_upward</mat-icon>\\n        </button>\\n\\n        <button\\n          mat-button\\n          mat-icon-button\\n          type=\\\"button\\\"\\n          (click)=\\\"moveElement(i,'down')\\\"\\n          [disabled]=\\\"i === config.options.fields.length-1\\\"\\n          mat-tooltip=\\\"Move element down\\\"\\n        >\\n          <mat-icon aria-hidden=\\\"true\\\">arrow_downward</mat-icon>\\n        </button>\\n\\n        <button\\n          mat-button\\n          mat-icon-button\\n          type=\\\"button\\\"\\n          color=\\\"accent\\\"\\n          (click)=\\\"remove(i)\\\"\\n          mat-tooltip=\\\"Remove element\\\"\\n        >\\n          <mat-icon aria-hidden=\\\"true\\\">delete_forever</mat-icon>\\n        </button>\\n      </mat-expansion-panel-header>\\n      <div\\n        *ngFor=\\\"let field of config.options.fields[i];\\\"\\n        dynamicField\\n        [config]=\\\"field\\\"\\n        [group]=\\\"subgroup\\\"\\n      >\\n      </div>\\n    </mat-expansion-panel>\\n  </ng-container>\\n</ng-container>\\n\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\n\nimport { MatDialog } from '@angular/material';\n\nimport { ElementConfig } from '../../../element-config/element-config';\nimport { ElementType } from '../../../element-config/element-type';\nimport { DynamicFormBuilder } from '../../dynamic-form-builder';\nimport { DialogButtons } from '../../enumerations/dialog-buttons';\nimport { DialogConfig } from '../../interfaces/dialog-config';\nimport { Field } from '../../interfaces/field';\nimport { FieldConfig } from '../../interfaces/field-config';\nimport { DynamicModalDialogComponent } from '../dynamic-modal-dialog/dynamic-modal-dialog.component';\n\n@Component({\n  selector: 'dynamic-page-editor',\n  templateUrl: './layout-editor.component.html',\n  styleUrls: ['./layout-editor.component.css']\n})\nexport class LayoutEditorComponent implements Field, OnInit {\n  config: FieldConfig;\n  group: FormGroup;\n  fb: DynamicFormBuilder;\n  array: FormArray;\n\n  typeSelectOptions: DialogConfig = {\n    heading: 'Add an element',\n    size: '400px',\n    layout: ElementConfig.getTypeSelection().layout,\n    entity: {},\n    dialogButtons: DialogButtons.SubmitCancel\n  };\n\n  viewSourceOptions: DialogConfig = {\n    heading: 'Dynamic Data Generated JSON',\n    size: '600px',\n    layout: [],\n    entity: {},\n    dialogButtons: DialogButtons.OK,\n    preformattedJson: true\n  };\n\n  elementConfigOptions: DialogConfig = {\n    heading: 'Element configuration',\n    size: '800px',\n    layout: [],\n    entity: {},\n    dialogButtons: DialogButtons.SubmitCancel\n  };\n\n  previewOptions: DialogConfig = {\n    heading: 'Preview',\n    size: '800px',\n    layout: [],\n    entity: {},\n    dialogButtons: DialogButtons.OK\n  };\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.fb = new DynamicFormBuilder();\n    this.array = this.group.get(this.config.name) as FormArray;\n  }\n\n  add(): void {\n    // for element type selection\n    const typeSelectRef = this.dialog.open(DynamicModalDialogComponent, {\n      width: this.typeSelectOptions.size,\n      disableClose: true,\n      data: this.typeSelectOptions\n    });\n\n    typeSelectRef.afterClosed().subscribe(result => {\n      if (result && typeof result !== 'boolean') {\n        const elementConfig = ElementConfig.get(result.elementType, true);\n        this.config.options.fields.push(elementConfig.layout);\n        this.array.push(\n          this.fb.createGroup(elementConfig.layout, elementConfig.entity)\n        );\n      }\n    });\n  }\n\n  viewSource(): void {\n    this.viewSourceOptions.entity = this.array.getRawValue();\n    this.dialog.open(DynamicModalDialogComponent, {\n      width: this.viewSourceOptions.size,\n      data: this.viewSourceOptions\n    });\n  }\n\n  onElementChange(index: number, config: any): void {\n    this.config.options.fields[index] = config;\n  }\n\n  moveElement(index: number, direction: string): void {\n    const moveIndex =\n      direction.toLocaleLowerCase() === 'up' ? index - 1 : index + 1;\n    const temp = this.config.options.fields[index];\n    this.config.options.fields[index] = this.config.options.fields[moveIndex];\n    this.config.options.fields[moveIndex] = temp;\n\n    const arrTemp = this.array.controls[index];\n    this.array.controls[index] = this.array.controls[moveIndex];\n    this.array.controls[moveIndex] = arrTemp;\n  }\n\n  remove(index) {\n    this.config.options.fields.splice(index, 1);\n    this.array.removeAt(index);\n  }\n\n  preview() {\n    // handle preview\n    this.previewOptions.layout = this.array.getRawValue();\n    this.dialog.open(DynamicModalDialogComponent, {\n      width: this.previewOptions.size,\n      data: this.previewOptions\n    });\n  }\n\n  getElementHeading(elementConfig) {\n    if (Array.isArray(elementConfig)) {\n      const heading = elementConfig.find(e => e.type === ElementType.Heading);\n      if (heading) {\n        return heading.label;\n      }\n    }\n    return 'Element configuration';\n  }\n\n  getElementLabel(elementConfig, group) {\n    if (Array.isArray(elementConfig)) {\n      const name = elementConfig.find(e => e.name === 'name');\n      if (name && group.value.name) {\n        return group.value.name;\n      }\n    }\n    return '';\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  OnChanges,\n  OnInit,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../../interfaces/field';\nimport { FieldConfig } from '../../interfaces/field-config';\n\nimport { ActionToolbarComponent } from '../../components/action-toolbar/action-toolbar.component';\nimport { FormAddressComponent } from '../../components/form-address/form-address.component';\nimport { FormArrayComponent } from '../../components/form-array/form-array.component';\nimport { FormButtonComponent } from '../../components/form-button/form-button.component';\nimport { FormCheckboxGroupComponent } from '../../components/form-checkbox-group/form-checkbox-group.component';\nimport { FormCheckboxComponent } from '../../components/form-checkbox/form-checkbox.component';\nimport { FormDateComponent } from '../../components/form-date/form-date.component';\nimport { FormEmailComponent } from '../../components/form-email/form-email.component';\nimport { FormExpansionPanelComponent } from '../../components/form-expansion-panel/form-expansion-panel.component';\nimport { FormFieldSetComponent } from '../../components/form-fieldset/form-fieldset.component';\nimport { FormHeadingComponent } from '../../components/form-heading/form-heading.component';\nimport { FormNumberComponent } from '../../components/form-number/form-number.component';\nimport { FormPasswordComponent } from '../../components/form-password/form-password.component';\nimport { FormRadioComponent } from '../../components/form-radio/form-radio.component';\nimport { FormSelectComponent } from '../../components/form-select/form-select.component';\nimport { FormSlideToggleComponent } from '../../components/form-slide-toggle/form-slide-toggle.component';\nimport { FormSliderComponent } from '../../components/form-slider/form-slider.component';\nimport { FormStatesComponent } from '../../components/form-states/form-states.component';\nimport { FormStaticPanelComponent } from '../../components/form-static-panel/form-static-panel.component';\nimport { FormStaticComponent } from '../../components/form-static/form-static.component';\nimport { FormTextMaskComponent } from '../../components/form-text-mask/form-text-mask.component';\nimport { FormTextComponent } from '../../components/form-text/form-text.component';\nimport { FormTextareaComponent } from '../../components/form-textarea/form-textarea.component';\nimport { FormTimeComponent } from '../../components/form-time/form-time.component';\nimport { LayoutEditorComponent } from '../../components/layout-editor/layout-editor.component';\n\nconst components: { [type: string]: Type<Field> } = {\n  'action-toolbar': ActionToolbarComponent,\n  address: FormAddressComponent,\n  array: FormArrayComponent,\n  button: FormButtonComponent,\n  checkbox: FormCheckboxComponent,\n  'checkbox-group': FormCheckboxGroupComponent,\n  date: FormDateComponent,\n  email: FormEmailComponent,\n  fieldset: FormFieldSetComponent,\n  heading: FormHeadingComponent,\n  'layout-editor': LayoutEditorComponent,\n  number: FormNumberComponent,\n  panel: FormExpansionPanelComponent,\n  password: FormPasswordComponent,\n  phone: FormTextMaskComponent,\n  radio: FormRadioComponent,\n  select: FormSelectComponent,\n  slider: FormSliderComponent,\n  'slide-toggle': FormSlideToggleComponent,\n  ssn: FormTextMaskComponent,\n  states: FormStatesComponent,\n  static: FormStaticComponent,\n  'static-panel': FormStaticPanelComponent,\n  text: FormTextComponent,\n  textarea: FormTextareaComponent,\n  'text-mask': FormTextMaskComponent,\n  time: FormTimeComponent,\n  zip: FormTextMaskComponent\n};\n\n@Directive({\n  selector: '[dynamicField]',\n  exportAs: 'dynamicForm'\n})\nexport class DynamicFieldDirective implements Field, OnChanges, OnInit {\n  @Input()\n  config: FieldConfig;\n  @Input()\n  group: FormGroup;\n\n  component: ComponentRef<Field>;\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef\n  ) {}\n\n  ngOnChanges() {\n    if (this.component) {\n      this.component.instance.config = this.config;\n      this.component.instance.group = this.group;\n    }\n  }\n\n  ngOnInit() {\n    if (!this.config) {\n      throw new Error(`Configuration missing`);\n    }\n    if (!this.group) {\n      throw new Error(`FormGroup missing`);\n    }\n    if (this.config.type && !components[this.config.type]) {\n      const supportedTypes = Object.keys(components).join(', ');\n      throw new Error(\n        `Trying to use an unsupported type (${this.config.type}).\n        Supported types: ${supportedTypes}`\n      );\n    }\n    const component = this.resolver.resolveComponentFactory<Field>(\n      components[this.config.type]\n    );\n    this.component = this.container.createComponent(component);\n    this.component.instance.config = this.config;\n    this.component.instance.group = this.group;\n  }\n}\n","import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '../core/core.module';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { NgxTrumbowygModule } from 'ngx-trumbowyg';\nimport { ActionToolbarComponent } from './components/action-toolbar/action-toolbar.component';\nimport { DynamicFormComponent } from './components/dynamic-form/dynamic-form.component';\nimport { DynamicModalDialogComponent } from './components/dynamic-modal-dialog/dynamic-modal-dialog.component';\nimport { FormAddressComponent } from './components/form-address/form-address.component';\nimport { FormArrayComponent } from './components/form-array/form-array.component';\nimport { FormButtonComponent } from './components/form-button/form-button.component';\nimport { FormCheckboxGroupComponent } from './components/form-checkbox-group/form-checkbox-group.component';\nimport { FormCheckboxComponent } from './components/form-checkbox/form-checkbox.component';\nimport { FormDateComponent } from './components/form-date/form-date.component';\nimport { FormEmailComponent } from './components/form-email/form-email.component';\nimport { FormExpansionPanelComponent } from './components/form-expansion-panel/form-expansion-panel.component';\nimport { FormFieldSetComponent } from './components/form-fieldset/form-fieldset.component';\nimport { FormHeadingComponent } from './components/form-heading/form-heading.component';\nimport { FormNumberComponent } from './components/form-number/form-number.component';\nimport { FormPasswordComponent } from './components/form-password/form-password.component';\nimport { FormRadioComponent } from './components/form-radio/form-radio.component';\nimport { FormSelectComponent } from './components/form-select/form-select.component';\nimport { FormSlideToggleComponent } from './components/form-slide-toggle/form-slide-toggle.component';\nimport { FormSliderComponent } from './components/form-slider/form-slider.component';\nimport { FormStatesComponent } from './components/form-states/form-states.component';\nimport { FormStaticPanelComponent } from './components/form-static-panel/form-static-panel.component';\nimport { FormStaticComponent } from './components/form-static/form-static.component';\nimport { FormTextMaskComponent } from './components/form-text-mask/form-text-mask.component';\nimport { FormTextComponent } from './components/form-text/form-text.component';\nimport { FormTextareaComponent } from './components/form-textarea/form-textarea.component';\nimport { FormTimeComponent } from './components/form-time/form-time.component';\nimport { LayoutEditorComponent } from './components/layout-editor/layout-editor.component';\nimport { DynamicFieldDirective } from './directives/dynamic-field/dynamic-field.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    ReactiveFormsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAdOa90pqGf2iukXoy43TBYQcfUE-nYqjQ',\n      libraries: ['places']\n    }),\n    NgxTrumbowygModule.withConfig({\n      svgPath: '/assets/trumbowyg-icons.svg',\n      removeformatPasted: true\n    })\n  ],\n  declarations: [\n    // directives\n    DynamicFieldDirective,\n\n    // components\n    ActionToolbarComponent,\n    DynamicFormComponent,\n    DynamicModalDialogComponent,\n    FormAddressComponent,\n    FormArrayComponent,\n    FormButtonComponent,\n    FormCheckboxComponent,\n    FormCheckboxGroupComponent,\n    FormDateComponent,\n    FormEmailComponent,\n    FormFieldSetComponent,\n    FormHeadingComponent,\n    FormNumberComponent,\n    FormPasswordComponent,\n    FormRadioComponent,\n    FormSelectComponent,\n    FormSliderComponent,\n    FormSlideToggleComponent,\n    FormStatesComponent,\n    FormStaticComponent,\n    FormStaticPanelComponent,\n    FormTextComponent,\n    FormTextareaComponent,\n    FormTextMaskComponent,\n    FormTimeComponent,\n    FormExpansionPanelComponent,\n    LayoutEditorComponent\n  ],\n  exports: [DynamicFormComponent, LayoutEditorComponent],\n  entryComponents: [\n    ActionToolbarComponent,\n    DynamicModalDialogComponent,\n    FormAddressComponent,\n    FormArrayComponent,\n    FormButtonComponent,\n    FormCheckboxComponent,\n    FormCheckboxGroupComponent,\n    FormDateComponent,\n    FormEmailComponent,\n    FormFieldSetComponent,\n    FormHeadingComponent,\n    FormNumberComponent,\n    FormPasswordComponent,\n    FormRadioComponent,\n    FormSelectComponent,\n    FormSliderComponent,\n    FormSlideToggleComponent,\n    FormStatesComponent,\n    FormStaticComponent,\n    FormStaticPanelComponent,\n    FormTextComponent,\n    FormTextareaComponent,\n    FormTextMaskComponent,\n    FormTimeComponent,\n    FormExpansionPanelComponent,\n    LayoutEditorComponent\n  ],\n  providers: []\n})\nexport class DynamicDataModule {}\n","import {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\n\nimport { ElementType } from '../element-config/element-type';\nimport { FieldConfig } from './interfaces/field-config';\nimport { ItemConfig } from './interfaces/item-config';\nimport { RequiredMinimumValidator } from './validators/required-minimum';\n\nexport class DynamicFormBuilder {\n  public fb: FormBuilder;\n\n  constructor() {\n    this.fb = new FormBuilder();\n  }\n\n  createForm() {\n    return this.fb.group({});\n  }\n\n  reconcileForm(form: FormGroup, layout: FieldConfig[], entity: any) {\n    this.reconcileGroup(form, layout, entity);\n  }\n\n  reconcileGroup(group: FormGroup, configs: FieldConfig[], entity: any) {\n    const controlKeys = Object.keys(group.controls);\n    const itemSpecs = this.getSpecify(configs);\n\n    const configNames = configs\n      .filter(config => this.isControl(config.type))\n      .map(field => field.name)\n      .concat(\n        configs\n          .filter(config => this.hasSpecify(config))\n          .map(field => field.options.specify.name),\n        itemSpecs.map(field => field.name)\n      )\n      // remove null values from configNames\n      .filter(config => config);\n\n    // if key is not found in configs, remove the control from the group\n    controlKeys\n      .filter(key => configNames.indexOf(key) === -1)\n      .forEach(key => group.removeControl(key));\n\n    // if config name not found in keys, add the control to the group\n    configNames\n      .filter(name => controlKeys.indexOf(name) === -1)\n      .forEach(name => {\n        let entityValue = entity ? entity[name] : entity;\n        const config = configs.find(field => field.name === name);\n        if (config) {\n          if (config.options.defaultValue && entityValue === undefined) {\n            entityValue = config.options.defaultValue;\n          }\n          group.addControl(\n            config.name,\n            this.createControl(config, entityValue)\n          );\n          if (this.hasSpecify(config)) {\n            const specifyValue = entity\n              ? entity[config.options.specify.name]\n              : entity;\n            group.addControl(\n              config.options.specify.name,\n              this.createControl(config.options.specify, specifyValue)\n            );\n          }\n          if (config.options && config.options.items) {\n            config.options.items.forEach(item => {\n              if (this.hasSpecify(item) && item.options.specify.name) {\n                const specifyValue = entity\n                  ? entity[item.options.specify.name]\n                  : entity;\n                group.addControl(\n                  item.options.specify.name,\n                  this.createControl(item.options.specify, specifyValue)\n                );\n              }\n            });\n          }\n        }\n      });\n  }\n\n  createControl(config: FieldConfig, entity?: any): AbstractControl {\n    if (this.isGroup(config.type)) {\n      return this.createGroup(config, entity);\n    }\n\n    if (this.isEditorArray(config.type)) {\n      return this.createEditorArray(config, entity);\n    }\n\n    if (this.isArray(config.type)) {\n      const length =\n        entity && Array.isArray(entity)\n          ? entity.length\n          : config.options && config.options.defaultEmpty === true\n            ? 0\n            : 1;\n      return this.createArray(config, length, entity);\n    }\n\n    const disabled = config.options ? config.options.disabled : false;\n    if (config.type === 'date' && entity) {\n      entity = new Date(entity);\n    }\n    return this.fb.control({ disabled, value: entity });\n  }\n\n  createGroup(groupConfig: any, entity?: any): FormGroup {\n    const validator = this.createGroupValidator(groupConfig);\n    const group = this.fb.group({}, validator);\n\n    // addControlsToGroup\n    const configs: FieldConfig[] =\n      groupConfig.options && groupConfig.options.fields\n        ? groupConfig.options.fields\n        : groupConfig;\n    configs.filter(config => this.isControl(config.type)).forEach(config => {\n      let entityValue = entity ? entity[config.name] : entity;\n      if (config.options.defaultValue && entityValue === undefined) {\n        entityValue = config.options.defaultValue;\n      }\n      group.addControl(config.name, this.createControl(config, entityValue));\n      if (this.hasSpecify(config)) {\n        const specifyValue = entity\n          ? entity[config.options.specify.name]\n          : entity;\n        group.addControl(\n          config.options.specify.name,\n          this.createControl(config.options.specify, specifyValue)\n        );\n      }\n      if (config.options && config.options.items) {\n        config.options.items.forEach(item => {\n          if (this.hasSpecify(item) && item.options.specify.name) {\n            const specifyValue = entity\n              ? entity[item.options.specify.name]\n              : entity;\n            group.addControl(\n              item.options.specify.name,\n              this.createControl(item.options.specify, specifyValue)\n            );\n          }\n        });\n      }\n    });\n    return group;\n  }\n\n  createArray(\n    arrayConfig: FieldConfig,\n    length: number,\n    entity?: any\n  ): FormArray {\n    const validators = this.createArrayValidator(arrayConfig);\n    const array = this.fb.array([], validators);\n\n    for (let i = 0; i < length; i++) {\n      // TODO: test array > group > array > group recursive\n      const group = this.createGroup(\n        arrayConfig,\n        entity && entity.length >= i && entity[i] ? entity[i] : entity\n      );\n      array.push(group);\n    }\n    return array;\n  }\n\n  createEditorArray(arrayConfig: FieldConfig, entity?: any): FormArray {\n    const validators = this.createArrayValidator(arrayConfig);\n    const array = this.fb.array([], validators);\n\n    for (let i = 0; i < arrayConfig.options.fields.length; i++) {\n      const group = this.createGroup(arrayConfig.options.fields[i], entity[i]);\n      array.push(group);\n    }\n    return array;\n  }\n\n  createGroupValidator(config?: any) {\n    if (!config || !config.options || !config.options.validation) {\n      return;\n    }\n    if (config.options.validation.requiredMin) {\n      // must return function\n      const val = new RequiredMinimumValidator(\n        config.options.validation.requiredMin\n      ).validate;\n      return { validator: val };\n    }\n  }\n\n  createArrayValidator(config?: any) {\n    const arr = [];\n    if (!config || !config.options || !config.options.validation) {\n      return null;\n    }\n    if (config.options.validation.required) {\n      arr.push(Validators.required);\n    }\n    if (config.options.validation.minLength) {\n      arr.push(Validators.minLength(config.options.validation.minLength));\n    }\n    if (config.options.validation.maxLength) {\n      arr.push(Validators.maxLength(config.options.validation.maxLength));\n    }\n    return Validators.compose(arr);\n  }\n\n  isGroup(type: string): boolean {\n    return (\n      type === ElementType.CheckboxGroup ||\n      type === ElementType.Fieldset ||\n      type === ElementType.Panel\n    );\n  }\n\n  isArray(type: string): boolean {\n    return type === ElementType.Array;\n  }\n\n  isEditorArray(type: string): boolean {\n    return type === ElementType.LayoutEditor;\n  }\n\n  isControl(type: string): boolean {\n    return !/*type === 'button' ||*/ (\n      type === ElementType.Heading || type === ElementType.Static\n    );\n  }\n\n  hasSpecify(config: FieldConfig | ItemConfig): boolean {\n    return config.options && !!config.options.specify;\n  }\n\n  getSpecify(items: ItemConfig[]): FieldConfig[] {\n    return items\n      .filter(item => this.hasSpecify(item))\n      .map(item => item.options.specify);\n  }\n}\n","export enum ActionButtons {\n  Cancel = 'cancel',\n  Delete = 'delete',\n  Submit = 'submit',\n}\n","export enum DialogButtons {\n  OK,\n  OKCancel,\n  NextCancel,\n  SaveCancel,\n  SubmitCancel,\n  YesNo\n}\n","import { FormGroup } from '@angular/forms';\n\nexport class RequiredMinimumValidator {\n  public validate: () => any;\n\n  constructor(min: number) {\n    // set up function w/ min param, store for future use\n    this.validate = this.validateRequiredMin(min);\n  }\n\n  validateRequiredMin(min: number): any {\n    return (group: FormGroup) => {\n      if (!group || !group.controls) {\n        return null;\n      }\n\n      const count = Object.keys(group.controls)\n        .map(name => group.get(name))\n        .filter(item => item.value).length;\n\n      return count < min\n        ? { requiredMin: { required: min, actual: count } }\n        : null;\n    };\n  }\n}\n","export class ActionToolbarConfig {\n  layout: any = [\n    {\n      type: 'heading',\n      label: 'Action Toolbar Configuration',\n      options: {\n        level: 1,\n      },\n    },\n    {\n      name: 'type',\n      type: 'text',\n      label: 'Element type',\n      options: {\n        validation: {\n          required: true,\n        },\n        disabled: true,\n      },\n    },\n    {\n      type: 'panel',\n      name: 'options',\n      label: 'Options',\n      options: {\n        fields: [\n          {\n            type: 'checkbox-group',\n            name: 'buttons',\n            label: 'Buttons',\n            options: {\n              validation: {\n                requiredMin: 1,\n              },\n              fields: [\n                {\n                  type: 'checkbox',\n                  name: 'allowDelete',\n                  label: 'Delete',\n                  options: {\n                    specify: {\n                      type: 'text',\n                      name: 'deleteButtonText',\n                      label: 'Delete button text',\n                      options: {\n                        hint: 'Default is Delete',\n                        validation: {},\n                      },\n                    },\n                    validation: {},\n                  },\n                },\n                {\n                  type: 'checkbox',\n                  name: 'allowCancel',\n                  label: 'Cancel',\n                  options: {\n                    specify: {\n                      type: 'text',\n                      name: 'cancelButtonText',\n                      label: 'Cancel button text',\n                      options: {\n                        hint: 'Default is Cancel',\n                        validation: {},\n                      },\n                    },\n                    validation: {},\n                  },\n                },\n                {\n                  type: 'checkbox',\n                  name: 'allowSubmit',\n                  label: 'Submit',\n                  options: {\n                    specify: {\n                      type: 'text',\n                      name: 'submitButtonText',\n                      label: 'Submit button text',\n                      options: {\n                        hint: 'Default is Submit',\n                        validation: {},\n                      },\n                    },\n                    validation: {},\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n    },\n  ];\n  entity: any = {\n    type: 'action-toolbar',\n    options: {\n      buttons: {\n        allowDelete: false,\n        deleteButtonText: 'Delete',\n        allowCancel: true,\n        cancelButtonText: 'Cancel',\n        allowSubmit: true,\n        submitButtonText: 'Submit',\n      },\n    },\n  };\n}\n","export class AddressConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Address configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'What the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide additional instructions if necessary'\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'address'\n    };\n}\n","export class ArrayConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Array configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'addText',\n                        type: 'text',\n                        label: 'Add button text',\n                        options: {\n                            hint: 'Provide meaningful button text',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'removeText',\n                        type: 'text',\n                        label: 'Remove button text',\n                        options: {\n                            hint: 'Provide meaningful button text',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'defaultEmpty',\n                        type: 'checkbox',\n                        label: 'Default to empty array?',\n                        options: {\n                            align: 'after',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'array'\n    };\n}\n","export class ButtonConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Button configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'disabled',\n                        type: 'radio',\n                        label: 'Disabled by default',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true\n                            },\n                            items: [\n                                {\n                                    label: 'Yes',\n                                    value: true\n                                },\n                                {\n                                    label: 'No',\n                                    value: false\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'button',\n        options: {\n            disabled: false\n        }\n    };\n}\n","export class CheckboxGroupConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Checkbox group configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'showIf',\n                        type: 'fieldset',\n                        label: 'Show If?',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'property',\n                                    type: 'text',\n                                    label: 'Property name',\n                                    options: {\n                                        hint:\n                                            'Property name of field dependency.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'value',\n                                    type: 'text',\n                                    label: 'Property value',\n                                    options: {\n                                        hint: 'Value of dependent field.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'requiredMin',\n                                    type: 'number',\n                                    label:\n                                        'Require at least this many to be checked:',\n                                    options: {\n                                        validation: {\n                                            required: false,\n                                            min: '0'\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'fields',\n                        type: 'array',\n                        label: 'Fields',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'type',\n                                    type: 'select',\n                                    label: 'Element type',\n                                    options: {\n                                        validation: {\n                                            required: true\n                                        },\n                                        items: [\n                                            {\n                                                label: 'checkbox',\n                                                value: 'checkbox'\n                                            }\n                                        ],\n                                        disabled: false\n                                    }\n                                },\n                                {\n                                    name: 'name',\n                                    type: 'text',\n                                    label: 'Name',\n                                    options: {\n                                        hint: 'A unique element name',\n                                        validation: {\n                                            required: true\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'label',\n                                    type: 'text',\n                                    label: 'Label',\n                                    options: {\n                                        hint: 'The text the user sees',\n                                        validation: {\n                                            required: true\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'options',\n                                    type: 'panel',\n                                    label: 'Options',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'align',\n                                                type: 'radio',\n                                                label: 'Align box to...',\n                                                options: {\n                                                    align: 'after',\n                                                    vertical: true,\n                                                    validation: {\n                                                        required: false\n                                                    },\n                                                    items: [\n                                                        {\n                                                            label: 'Start',\n                                                            value: 'start'\n                                                        },\n                                                        {\n                                                            label: 'End',\n                                                            value: 'end'\n                                                        }\n                                                    ]\n                                                }\n                                            },\n                                            {\n                                                name: 'disabled',\n                                                type: 'radio',\n                                                label: 'Default state',\n                                                options: {\n                                                    align: 'after',\n                                                    vertical: true,\n                                                    validation: {\n                                                        required: false\n                                                    },\n                                                    items: [\n                                                        {\n                                                            label: 'Disabled',\n                                                            value: true\n                                                        },\n                                                        {\n                                                            label: 'Enabled',\n                                                            value: false\n                                                        }\n                                                    ]\n                                                }\n                                            },\n                                            {\n                                                name: 'specify',\n                                                type: 'panel',\n                                                label: 'Other specify',\n                                                options: {\n                                                    fields: [\n                                                        {\n                                                            name: 'type',\n                                                            type: 'select',\n                                                            label:\n                                                                'Element type',\n                                                            options: {\n                                                                validation: {\n                                                                    required: false\n                                                                },\n                                                                items: [\n                                                                    {\n                                                                        label:\n                                                                            'text',\n                                                                        value:\n                                                                            'text'\n                                                                    }\n                                                                ],\n                                                                disabled: false\n                                                            }\n                                                        },\n                                                        {\n                                                            name: 'name',\n                                                            type: 'text',\n                                                            label: 'Name',\n                                                            options: {\n                                                                hint:\n                                                                    'A unique element name',\n                                                                validation: {\n                                                                    required: false\n                                                                }\n                                                            }\n                                                        },\n                                                        {\n                                                            name: 'label',\n                                                            type: 'text',\n                                                            label: 'Label',\n                                                            options: {\n                                                                hint:\n                                                                    'The text the user sees',\n                                                                validation: {\n                                                                    required: false\n                                                                }\n                                                            }\n                                                        },\n                                                        {\n                                                            name: 'options',\n                                                            type: 'panel',\n                                                            label: 'Options',\n                                                            options: {\n                                                                fields: [\n                                                                    {\n                                                                        name:\n                                                                            'hint',\n                                                                        type:\n                                                                            'text',\n                                                                        label:\n                                                                            'Hint',\n                                                                        options: {\n                                                                            hint:\n                                                                                'Give the user a hint',\n                                                                            validation: {\n                                                                                required: false\n                                                                            }\n                                                                        }\n                                                                    },\n\n                                                                    {\n                                                                        name:\n                                                                            'validation',\n                                                                        type:\n                                                                            'fieldset',\n                                                                        label:\n                                                                            'Validation',\n                                                                        options: {\n                                                                            fields: [\n                                                                                {\n                                                                                    name:\n                                                                                        'requiredIf',\n                                                                                    type:\n                                                                                        'fieldset',\n                                                                                    label:\n                                                                                        'Required If?',\n                                                                                    options: {\n                                                                                        fields: [\n                                                                                            {\n                                                                                                name:\n                                                                                                    'property',\n                                                                                                type:\n                                                                                                    'text',\n                                                                                                label:\n                                                                                                    'Property name',\n                                                                                                options: {\n                                                                                                    hint:\n                                                                                                        'Property name of field dependency.',\n                                                                                                    validation: {\n                                                                                                        required: false\n                                                                                                    }\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                name:\n                                                                                                    'value',\n                                                                                                type:\n                                                                                                    'text',\n                                                                                                label:\n                                                                                                    'Property value',\n                                                                                                options: {\n                                                                                                    hint:\n                                                                                                        'Value of dependent field.',\n                                                                                                    validation: {\n                                                                                                        required: false\n                                                                                                    }\n                                                                                                }\n                                                                                            }\n                                                                                        ]\n                                                                                    }\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            },\n                                            {\n                                                name: 'validation',\n                                                type: 'fieldset',\n                                                label: 'Validation',\n                                                options: {\n                                                    fields: [\n                                                        {\n                                                            name: 'required',\n                                                            type: 'checkbox',\n                                                            label: 'Required?',\n                                                            options: {\n                                                                align: 'after',\n                                                                validation: {\n                                                                    required: false\n                                                                }\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'checkbox-group',\n        options: {\n            validation: {\n                requiredMin: 0\n            },\n            fields: [\n                {\n                    options: {\n                        validation: {\n                            disabled: false,\n                            align: 'after'\n                        }\n                    }\n                }\n            ]\n        }\n    };\n}\n","export class CheckboxConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Checkbox configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'align',\n                        type: 'radio',\n                        label: 'Align box to...',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true\n                            },\n                            items: [\n                                {\n                                    label: 'Start',\n                                    value: 'after'\n                                },\n                                {\n                                    label: 'End',\n                                    value: 'before'\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'disabled',\n                        type: 'radio',\n                        label: 'Default state',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true\n                            },\n                            items: [\n                                {\n                                    label: 'Disabled',\n                                    value: true\n                                },\n                                {\n                                    label: 'Enabled',\n                                    value: false\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'checkbox',\n        options: {\n            disabled: false,\n            align: 'after'\n        }\n    };\n}\n","export class DateConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Date configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value (ISO date format)'\n                        }\n                    },\n                    {\n                        name: 'showIf',\n                        type: 'fieldset',\n                        label: 'Show If?',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'property',\n                                    type: 'text',\n                                    label: 'Property name',\n                                    options: {\n                                        hint:\n                                            'Property name of field dependency.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'value',\n                                    type: 'text',\n                                    label: 'Property value',\n                                    options: {\n                                        hint: 'Value of dependent field.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'startAt',\n                        type: 'panel',\n                        label: 'Start date',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'year',\n                                    type: 'number',\n                                    label: 'Year',\n                                    options: {\n                                        hint: 'The start year',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'month',\n                                    type: 'select',\n                                    label: 'Month',\n                                    options: {\n                                        hint: 'The start month',\n                                        items: [\n                                            {\n                                                value: '0',\n                                                label: 'January'\n                                            },\n                                            {\n                                                value: '1',\n                                                label: 'February'\n                                            },\n                                            {\n                                                value: '2',\n                                                label: 'March'\n                                            },\n                                            {\n                                                value: '3',\n                                                label: 'April'\n                                            },\n                                            {\n                                                value: '4',\n                                                label: 'May'\n                                            },\n                                            {\n                                                value: '5',\n                                                label: 'June'\n                                            },\n                                            {\n                                                value: '6',\n                                                label: 'July'\n                                            },\n                                            {\n                                                value: '7',\n                                                label: 'August'\n                                            },\n                                            {\n                                                value: '8',\n                                                label: 'September'\n                                            },\n                                            {\n                                                value: '9',\n                                                label: 'October'\n                                            },\n                                            {\n                                                value: '10',\n                                                label: 'November'\n                                            },\n                                            {\n                                                value: '11',\n                                                label: 'December'\n                                            }\n                                        ],\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'day',\n                                    type: 'number',\n                                    label: 'Day',\n                                    options: {\n                                        hint: 'The start day',\n                                        validation: {\n                                            required: false,\n                                            min: 1,\n                                            max: 31\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'minDate',\n                                    type: 'panel',\n                                    label: 'Minimum date',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'year',\n                                                type: 'number',\n                                                label: 'Year',\n                                                options: {\n                                                    hint:\n                                                        'The minimum date year',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'month',\n                                                type: 'select',\n                                                label: 'Month',\n                                                options: {\n                                                    hint:\n                                                        'The minimum date month',\n                                                    items: [\n                                                        {\n                                                            value: '0',\n                                                            label: 'January'\n                                                        },\n                                                        {\n                                                            value: '1',\n                                                            label: 'February'\n                                                        },\n                                                        {\n                                                            value: '2',\n                                                            label: 'March'\n                                                        },\n                                                        {\n                                                            value: '3',\n                                                            label: 'April'\n                                                        },\n                                                        {\n                                                            value: '4',\n                                                            label: 'May'\n                                                        },\n                                                        {\n                                                            value: '5',\n                                                            label: 'June'\n                                                        },\n                                                        {\n                                                            value: '6',\n                                                            label: 'July'\n                                                        },\n                                                        {\n                                                            value: '7',\n                                                            label: 'August'\n                                                        },\n                                                        {\n                                                            value: '8',\n                                                            label: 'September'\n                                                        },\n                                                        {\n                                                            value: '9',\n                                                            label: 'October'\n                                                        },\n                                                        {\n                                                            value: '10',\n                                                            label: 'November'\n                                                        },\n                                                        {\n                                                            value: '11',\n                                                            label: 'December'\n                                                        }\n                                                    ],\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'day',\n                                                type: 'number',\n                                                label: 'Day',\n                                                options: {\n                                                    hint:\n                                                        'The minimum date day',\n                                                    validation: {\n                                                        required: false,\n                                                        min: 1,\n                                                        max: 31\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                },\n                                {\n                                    name: 'maxDate',\n                                    type: 'panel',\n                                    label: 'Maximum date',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'year',\n                                                type: 'number',\n                                                label: 'Year',\n                                                options: {\n                                                    hint:\n                                                        'The maximum date year',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'month',\n                                                type: 'select',\n                                                label: 'Month',\n                                                options: {\n                                                    hint:\n                                                        'The maximum date month',\n                                                    items: [\n                                                        {\n                                                            value: '0',\n                                                            label: 'January'\n                                                        },\n                                                        {\n                                                            value: '1',\n                                                            label: 'February'\n                                                        },\n                                                        {\n                                                            value: '2',\n                                                            label: 'March'\n                                                        },\n                                                        {\n                                                            value: '3',\n                                                            label: 'April'\n                                                        },\n                                                        {\n                                                            value: '4',\n                                                            label: 'May'\n                                                        },\n                                                        {\n                                                            value: '5',\n                                                            label: 'June'\n                                                        },\n                                                        {\n                                                            value: '6',\n                                                            label: 'July'\n                                                        },\n                                                        {\n                                                            value: '7',\n                                                            label: 'August'\n                                                        },\n                                                        {\n                                                            value: '8',\n                                                            label: 'September'\n                                                        },\n                                                        {\n                                                            value: '9',\n                                                            label: 'October'\n                                                        },\n                                                        {\n                                                            value: '10',\n                                                            label: 'November'\n                                                        },\n                                                        {\n                                                            value: '11',\n                                                            label: 'December'\n                                                        }\n                                                    ],\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'day',\n                                                type: 'number',\n                                                label: 'Day',\n                                                options: {\n                                                    hint:\n                                                        'The maximum date day',\n                                                    validation: {\n                                                        required: false,\n                                                        min: 1,\n                                                        max: 31\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'date'\n    };\n}\n","export class EmailConfig {\n    static pattern: any =\n        // tslint:disable-next-line\n        \"^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_'a-z{|}~]+(.[-!#$%&'*+/0-9=?A-Z^_'a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$\";\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Email configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'email'\n    };\n}\n","export class FieldsetConfig {\n  layout: any = [\n    {\n      type: 'heading',\n      label: 'Fieldset configuration',\n      options: {\n        level: 1,\n      },\n    },\n    {\n      name: 'type',\n      type: 'text',\n      label: 'Element type',\n      options: {\n        validation: {\n          required: true,\n        },\n        disabled: true,\n      },\n    },\n    {\n      name: 'name',\n      type: 'text',\n      label: 'Name',\n      options: {\n        hint: 'A unique element name',\n        validation: {\n          required: true,\n        },\n      },\n    },\n    {\n      name: 'label',\n      type: 'text',\n      label: 'Label',\n      options: {\n        hint: 'The text the user sees',\n        validation: {\n          required: true,\n        },\n      },\n    },\n    {\n      name: 'options',\n      type: 'panel',\n      label: 'Options',\n      options: {\n        fields: [],\n      },\n    },\n  ];\n  entity: any = {\n    type: 'fieldset',\n  };\n}\n","export class HeadingConfig {\n  layout: any = [\n    {\n      type: 'heading',\n      label: 'Heading configuration',\n      options: {\n        level: 1,\n      },\n    },\n    {\n      name: 'type',\n      type: 'text',\n      label: 'Element type',\n      options: {\n        validation: {\n          required: true,\n        },\n        disabled: true,\n      },\n    },\n    {\n      name: 'label',\n      type: 'text',\n      label: 'Label',\n      options: {\n        hint: 'What the user sees',\n        validation: {\n          required: true,\n        },\n      },\n    },\n    {\n      name: 'options',\n      type: 'panel',\n      label: 'Options',\n      options: {\n        fields: [\n          {\n            name: 'level',\n            type: 'slider',\n            label: 'Level',\n            options: {\n              validation: {\n                required: true,\n                min: 1,\n                max: '6',\n              },\n              invert: false,\n              vertical: false,\n              thumbLabel: true,\n              step: '1',\n              tickInterval: 'auto',\n            },\n          },\n        ],\n      },\n    },\n  ];\n  entity: any = {\n    type: 'heading',\n    options: {\n      level: 1,\n    },\n  };\n}\n","export { ActionToolbarConfig } from './action-toolbar';\nexport { AddressConfig } from './address';\nexport { ArrayConfig } from './array';\nexport { ButtonConfig } from './button';\nexport { CheckboxConfig } from './checkbox';\nexport { CheckboxGroupConfig } from './checkbox-group';\nexport { DateConfig } from './date';\nexport { EmailConfig } from './email';\nexport { FieldsetConfig } from './fieldset';\nexport { HeadingConfig } from './heading';\nexport { LayoutEditorConfig } from './layout-editor';\nexport { NumberConfig } from './number';\nexport { PanelConfig } from './panel';\nexport { PasswordConfig } from './password';\nexport { PhoneConfig } from './phone';\nexport { RadioConfig } from './radio';\nexport { SelectConfig } from './select';\nexport { SliderConfig } from './slider';\nexport { SlideToggleConfig } from './slide-toggle';\nexport { StatesConfig } from './states';\nexport { StaticConfig } from './static';\nexport { StaticPanelConfig } from './static-panel';\nexport { SsnConfig } from './ssn';\nexport { TextConfig } from './text';\nexport { TextareaConfig } from './textarea';\nexport { TextMaskConfig } from './text-mask';\nexport { TimeConfig } from './time';\nexport { TypeSelectConfig } from './type-select';\nexport { ZipConfig } from './zip';\n","export class LayoutEditorConfig {\n  layout: any = {\n    type: 'layout-editor',\n    name: 'fields',\n    options: {\n      fields: [],\n    },\n  };\n}\n","export class NumberConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Number configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'min',\n                                    type: 'number',\n                                    label: 'Minimum length',\n                                    options: {\n                                        hint:\n                                            'The minimum value that must be entered',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'max',\n                                    type: 'number',\n                                    label: 'Maximum length',\n                                    options: {\n                                        hint:\n                                            'The maximum value that can be entered',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'number',\n        options: {\n            disabled: false\n        }\n    };\n}\n","export class PanelConfig {\n  layout: any = [\n    {\n      type: 'heading',\n      label: 'Panel configuration',\n      options: {\n        level: 1,\n      },\n    },\n    {\n      name: 'type',\n      type: 'text',\n      label: 'Element type',\n      options: {\n        validation: {\n          required: true,\n        },\n        disabled: true,\n      },\n    },\n    {\n      name: 'name',\n      type: 'text',\n      label: 'Name',\n      options: {\n        hint: 'A unique element name',\n        validation: {\n          required: true,\n        },\n      },\n    },\n    {\n      name: 'label',\n      type: 'text',\n      label: 'Label',\n      options: {\n        hint: 'The text the user sees',\n        validation: {\n          required: true,\n        },\n      },\n    },\n    {\n      name: 'options',\n      type: 'panel',\n      label: 'Options',\n      options: {\n        fields: [\n          {\n            name: 'hint',\n            type: 'text',\n            label: 'Hint',\n            options: {\n              hint: 'Give user a hint',\n              validation: {\n                required: false,\n              },\n            },\n          },\n        ],\n      },\n    },\n  ];\n  entity: any = {\n    type: 'panel',\n  };\n}\n","export class PasswordConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Password configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'minLength',\n                                    type: 'number',\n                                    label: 'Minimum length',\n                                    options: {\n                                        hint:\n                                            'The minimum characters that must be entered',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'maxLength',\n                                    type: 'number',\n                                    label: 'Maximum length',\n                                    options: {\n                                        hint:\n                                            'The maximum characters that can be entered',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'password',\n        options: {\n            disabled: false\n        }\n    };\n}\n","import { TextMaskConfig } from './text-mask';\n\nexport class PhoneConfig {\n\n  static hint = '(xxx) xxx-xxxx';\n  static inputMask = '(000) 000-0000';\n  static pattern = '\\\\d{10}';\n  static patternValMsg = 'Phone must be 10 digits';\n  layout: any;\n  entity: any = {\n    type: 'phone',\n  };\n  constructor() {\n    this.layout = new TextMaskConfig().layout;\n    this.layout.map((f) => {\n      if (f.type === 'heading') {\n        f.label = 'Phone configuration';\n      }\n      if (f.name === 'options') {\n        f.options.fields.map((o) => {\n          if (o.name === 'hint' || o.name === 'inputMask') {\n            o.options.disabled = true;\n          }\n          if (o.name === 'validation') {\n            o.options.fields.map((v) => {\n              if (v.name === 'pattern' || v.name === 'patternValMsg') {\n                v.options.disabled = true;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n}\n","export class RadioConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Radio configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give the user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'showIf',\n                        type: 'fieldset',\n                        label: 'Show If?',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'property',\n                                    type: 'text',\n                                    label: 'Property name',\n                                    options: {\n                                        hint:\n                                            'Property name of field dependency.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'value',\n                                    type: 'text',\n                                    label: 'Property value',\n                                    options: {\n                                        hint: 'Value of dependent field.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'vertical',\n                        type: 'radio',\n                        label: 'List will be...',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true\n                            },\n                            items: [\n                                {\n                                    label: 'Vertical',\n                                    value: true\n                                },\n                                {\n                                    label: 'Horizontal',\n                                    value: false\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'disabled',\n                        type: 'radio',\n                        label: 'Default state',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true\n                            },\n                            items: [\n                                {\n                                    label: 'Disabled',\n                                    value: true\n                                },\n                                {\n                                    label: 'Enabled',\n                                    value: false\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'items',\n                        type: 'array',\n                        label: 'Items',\n                        options: {\n                            validation: {\n                                requiredMin: 2\n                            },\n                            fields: [\n                                {\n                                    name: 'value',\n                                    type: 'text',\n                                    label: 'Value',\n                                    options: {\n                                        hint: \"The value stored (e.g. 'NJ')\",\n                                        validation: {\n                                            required: true\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'label',\n                                    type: 'text',\n                                    label: 'Label',\n                                    options: {\n                                        hint:\n                                            \"What the user sees (e.g. 'New Jersey')\",\n                                        validation: {\n                                            required: true\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'options',\n                                    type: 'panel',\n                                    label: 'Options',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'specify',\n                                                type: 'panel',\n                                                label: 'Other specify',\n                                                options: {\n                                                    fields: [\n                                                        {\n                                                            name: 'type',\n                                                            type: 'select',\n                                                            label:\n                                                                'Element type',\n                                                            options: {\n                                                                validation: {\n                                                                    required: false\n                                                                },\n                                                                items: [\n                                                                    {\n                                                                        label:\n                                                                            'text',\n                                                                        value:\n                                                                            'text'\n                                                                    }\n                                                                ],\n                                                                disabled: false\n                                                            }\n                                                        },\n                                                        {\n                                                            name: 'name',\n                                                            type: 'text',\n                                                            label: 'Name',\n                                                            options: {\n                                                                hint:\n                                                                    'A unique element name',\n                                                                validation: {\n                                                                    required: false\n                                                                }\n                                                            }\n                                                        },\n                                                        {\n                                                            name: 'label',\n                                                            type: 'text',\n                                                            label: 'Label',\n                                                            options: {\n                                                                hint:\n                                                                    'The text the user sees',\n                                                                validation: {\n                                                                    required: false\n                                                                }\n                                                            }\n                                                        },\n                                                        {\n                                                            name: 'options',\n                                                            type: 'panel',\n                                                            label: 'Options',\n                                                            options: {\n                                                                fields: [\n                                                                    {\n                                                                        name:\n                                                                            'hint',\n                                                                        type:\n                                                                            'text',\n                                                                        label:\n                                                                            'Hint',\n                                                                        options: {\n                                                                            hint:\n                                                                                'Give the user a hint',\n                                                                            validation: {\n                                                                                required: false\n                                                                            }\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        name:\n                                                                            'validation',\n                                                                        type:\n                                                                            'fieldset',\n                                                                        label:\n                                                                            'Validation',\n                                                                        options: {\n                                                                            fields: [\n                                                                                {\n                                                                                    name:\n                                                                                        'requiredIf',\n                                                                                    type:\n                                                                                        'fieldset',\n                                                                                    label:\n                                                                                        'Required If?',\n                                                                                    options: {\n                                                                                        fields: [\n                                                                                            {\n                                                                                                name:\n                                                                                                    'property',\n                                                                                                type:\n                                                                                                    'text',\n                                                                                                label:\n                                                                                                    'Property name',\n                                                                                                options: {\n                                                                                                    hint:\n                                                                                                        'Property name of field dependency.',\n                                                                                                    validation: {\n                                                                                                        required: false\n                                                                                                    }\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                name:\n                                                                                                    'value',\n                                                                                                type:\n                                                                                                    'text',\n                                                                                                label:\n                                                                                                    'Property value',\n                                                                                                options: {\n                                                                                                    hint:\n                                                                                                        'Value of dependent field.',\n                                                                                                    validation: {\n                                                                                                        required: false\n                                                                                                    }\n                                                                                                }\n                                                                                            }\n                                                                                        ]\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    name:\n                                                                                        'minLength',\n                                                                                    type:\n                                                                                        'number',\n                                                                                    label:\n                                                                                        'Minimum number of characters',\n                                                                                    options: {\n                                                                                        validation: {\n                                                                                            required: false,\n                                                                                            min:\n                                                                                                '0'\n                                                                                        }\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    name:\n                                                                                        'maxLength',\n                                                                                    type:\n                                                                                        'number',\n                                                                                    label:\n                                                                                        'Maximum number of characters',\n                                                                                    options: {\n                                                                                        validation: {\n                                                                                            required: false,\n                                                                                            min:\n                                                                                                '0'\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'radio'\n    };\n}\n","export class SelectConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Select configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'What the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide additional instructions if necessary'\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'showIf',\n                        type: 'fieldset',\n                        label: 'Show If?',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'property',\n                                    type: 'text',\n                                    label: 'Property name',\n                                    options: {\n                                        hint:\n                                            'Property name of field dependency.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'value',\n                                    type: 'text',\n                                    label: 'Property value',\n                                    options: {\n                                        hint: 'Value of dependent field.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'items',\n                        type: 'array',\n                        label: 'Items',\n                        options: {\n                            validation: {\n                                required: true\n                            },\n                            hint: 'Enter items',\n                            fields: [\n                                {\n                                    name: 'value',\n                                    type: 'text',\n                                    label: 'Value',\n                                    options: {\n                                        validation: {\n                                            required: true\n                                        },\n                                        hint: 'Enter value'\n                                    }\n                                },\n                                {\n                                    name: 'label',\n                                    type: 'text',\n                                    label: 'Label',\n                                    options: {\n                                        validation: {\n                                            required: true\n                                        },\n                                        hint: 'Enter label'\n                                    }\n                                },\n                                {\n                                    name: 'options',\n                                    type: 'panel',\n                                    label: 'Options',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'specify',\n                                                type: 'panel',\n                                                label: 'Other specify',\n                                                options: {\n                                                    fields: [\n                                                        {\n                                                            name: 'type',\n                                                            type: 'select',\n                                                            label:\n                                                                'Element Type',\n                                                            options: {\n                                                                validation: {\n                                                                    required: false\n                                                                },\n                                                                items: [\n                                                                    {\n                                                                        label:\n                                                                            'Text',\n                                                                        value:\n                                                                            'text'\n                                                                    }\n                                                                ],\n                                                                disabled: false\n                                                            }\n                                                        },\n                                                        {\n                                                            name: 'name',\n                                                            type: 'text',\n                                                            label: 'Name',\n                                                            options: {\n                                                                hint:\n                                                                    'A unique element name',\n                                                                validation: {\n                                                                    required: false\n                                                                }\n                                                            }\n                                                        },\n                                                        {\n                                                            name: 'label',\n                                                            type: 'text',\n                                                            label: 'Label',\n                                                            options: {\n                                                                hint:\n                                                                    'The text the user sees',\n                                                                validation: {\n                                                                    required: false\n                                                                }\n                                                            }\n                                                        },\n                                                        {\n                                                            name: 'options',\n                                                            type: 'panel',\n                                                            label: 'Options',\n                                                            options: {\n                                                                fields: [\n                                                                    {\n                                                                        name:\n                                                                            'hint',\n                                                                        type:\n                                                                            'text',\n                                                                        label:\n                                                                            'Hint',\n                                                                        options: {\n                                                                            hint:\n                                                                                'Give the user a hint',\n                                                                            validation: {\n                                                                                required: false\n                                                                            }\n                                                                        }\n                                                                    },\n                                                                    {\n                                                                        name:\n                                                                            'validation',\n                                                                        type:\n                                                                            'fieldset',\n                                                                        label:\n                                                                            'Validation',\n                                                                        options: {\n                                                                            fields: [\n                                                                                {\n                                                                                    name:\n                                                                                        'requiredIf',\n                                                                                    type:\n                                                                                        'fieldset',\n                                                                                    label:\n                                                                                        'Required If?',\n                                                                                    options: {\n                                                                                        fields: [\n                                                                                            {\n                                                                                                name:\n                                                                                                    'property',\n                                                                                                type:\n                                                                                                    'text',\n                                                                                                label:\n                                                                                                    'Property name',\n                                                                                                options: {\n                                                                                                    hint:\n                                                                                                        'Property name of field dependency.',\n                                                                                                    validation: {\n                                                                                                        required: false\n                                                                                                    }\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                name:\n                                                                                                    'value',\n                                                                                                type:\n                                                                                                    'text',\n                                                                                                label:\n                                                                                                    'Property value',\n                                                                                                options: {\n                                                                                                    hint:\n                                                                                                        'Value of dependent field.',\n                                                                                                    validation: {\n                                                                                                        required: false\n                                                                                                    }\n                                                                                                }\n                                                                                            }\n                                                                                        ]\n                                                                                    }\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    }\n                                                                ]\n                                                            }\n                                                        }\n                                                    ]\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'select',\n        options: {\n            level: 1\n        }\n    };\n}\n","export class SlideToggleConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Slide Toggle configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'align',\n                        type: 'radio',\n                        label: 'Align toggle to...',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true\n                            },\n                            items: [\n                                {\n                                    label: 'Start',\n                                    value: 'after'\n                                },\n                                {\n                                    label: 'End',\n                                    value: 'before'\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'color',\n                        type: 'radio',\n                        label: 'Color',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true\n                            },\n                            items: [\n                                {\n                                    label: 'Accent',\n                                    value: 'accent'\n                                },\n                                {\n                                    label: 'Primary',\n                                    value: 'primary'\n                                },\n                                {\n                                    label: 'Warn',\n                                    value: 'warn'\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'disabled',\n                        type: 'radio',\n                        label: 'Default state',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true\n                            },\n                            items: [\n                                {\n                                    label: 'Disabled',\n                                    value: true\n                                },\n                                {\n                                    label: 'Enabled',\n                                    value: false\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'slide-toggle',\n        options: {\n            disabled: false,\n            align: 'after',\n            color: 'accent'\n        }\n    };\n}\n","export class SliderConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Slider configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'min',\n                                    type: 'number',\n                                    label: 'Minimum value',\n                                    options: {\n                                        hint: 'The minimum value allowed',\n                                        validation: {\n                                            required: true,\n                                            min: 0\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'max',\n                                    type: 'number',\n                                    label: 'Maximum value',\n                                    options: {\n                                        hint: 'The maximum value allowed',\n                                        validation: {\n                                            required: true,\n                                            min: 1\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'step',\n                        type: 'number',\n                        label: 'Increment',\n                        options: {\n                            hint: 'Thumb moves in increments of ...',\n                            validation: {\n                                required: true,\n                                min: 0\n                            }\n                        }\n                    },\n                    {\n                        name: 'thumbLabel',\n                        type: 'radio',\n                        label: 'Display thumb label?',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true,\n                                disabled: true\n                            },\n                            items: [\n                                {\n                                    label: 'Yes',\n                                    value: true\n                                },\n                                {\n                                    label: 'No',\n                                    value: false\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'vertical',\n                        type: 'radio',\n                        label: 'Orientation',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true\n                            },\n                            items: [\n                                {\n                                    label: 'Vertical',\n                                    value: true\n                                },\n                                {\n                                    label: 'Horizontal',\n                                    value: false\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'invert',\n                        type: 'radio',\n                        label: 'Invert slider?',\n                        options: {\n                            align: 'after',\n                            vertical: true,\n                            validation: {\n                                required: true,\n                                disabled: true\n                            },\n                            items: [\n                                {\n                                    label: 'Yes',\n                                    value: true\n                                },\n                                {\n                                    label: 'No',\n                                    value: false\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'tickInterval',\n                        type: 'text',\n                        label: 'Tick marks',\n                        options: {\n                            disabled: true,\n                            hint: 'Show tick marks along thumb track',\n                            validation: {\n                                required: true\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'slider',\n        options: {\n            validation: {\n                min: 0,\n                max: 10\n            },\n            step: 1,\n            thumbLabel: true,\n            vertical: false,\n            invert: false,\n            tickInterval: 'auto'\n        }\n    };\n}\n","import { TextMaskConfig } from './text-mask';\n\nexport class SsnConfig {\n\n  static hint = 'xxx-xx-xxxx';\n  static inputMask = '000-00-0000';\n  static pattern =\n    '^(?!219-09-9999|219099999|078-05-1120|078051120)(?!666|000|9\\\\d{2})\\\\d{3}-?(?!00)\\\\d{2}-?(?!0{4})\\\\d{4}$';\n  static patternValMsg =\n    'Invalid SSN entered. Visit the <a href=\"https://secure.ssa.gov/poms.nsf/lnx/0110201035\" ' +\n    'target=\"_blank\">Social Security Admnistration</a> for more information.';\n  layout: any;\n  entity: any = {\n    type: 'ssn',\n  };\n  constructor() {\n    this.layout = new TextMaskConfig().layout;\n    this.layout.map((f) => {\n      if (f.type === 'heading') {\n        f.label = 'SSN configuration';\n      }\n      if (f.name === 'options') {\n        f.options.fields.map((o) => {\n          if (o.name === 'hint' || o.name === 'inputMask') {\n            o.options.disabled = true;\n          }\n          if (o.name === 'validation') {\n            o.options.fields.map((v) => {\n              if (v.name === 'pattern' || v.name === 'patternValMsg') {\n                v.options.disabled = true;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n}\n","import { SelectConfig } from './select';\n\nexport class StatesConfig {\n    static states: any[] = [\n        {\n            value: 'AL',\n            label: 'Alabama',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'AK',\n            label: 'Alaska',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'AZ',\n            label: 'Arizona',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'AR',\n            label: 'Arkansas',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'CA',\n            label: 'California',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'CO',\n            label: 'Colorado',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'CT',\n            label: 'Connecticut',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'DE',\n            label: 'Delaware',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'DC',\n            label: 'District of Columbia',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'FL',\n            label: 'Florida',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'GA',\n            label: 'Georgia',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'HI',\n            label: 'Hawaii',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'ID',\n            label: 'Idaho',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'IL',\n            label: 'Illinois',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'IN',\n            label: 'Indiana',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'IA',\n            label: 'Iowa',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'KS',\n            label: 'Kansas',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'KY',\n            label: 'Kentucky',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'LA',\n            label: 'Louisiana',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'ME',\n            label: 'Maine',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'MD',\n            label: 'Maryland',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'MA',\n            label: 'Massachusetts',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'MI',\n            label: 'Michigan',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'MN',\n            label: 'Minnesota',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'MS',\n            label: 'Mississippi',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'MO',\n            label: 'Missouri',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'MT',\n            label: 'Montana',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'NE',\n            label: 'Nebraska',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'NV',\n            label: 'Nevada',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'NH',\n            label: 'New Hampshire',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'NJ',\n            label: 'New Jersey',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'NM',\n            label: 'New Mexico',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'NY',\n            label: 'New York',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'NC',\n            label: 'North Carolina',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'ND',\n            label: 'North Dakota',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'OH',\n            label: 'Ohio',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'OK',\n            label: 'Oklahoma',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'OR',\n            label: 'Oregon',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'PA',\n            label: 'Pennsylvania',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'RI',\n            label: 'Rhode Island',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'SC',\n            label: 'South Carolina',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'SD',\n            label: 'South Dakota',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'TN',\n            label: 'Tennessee',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'TX',\n            label: 'Texas',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'UT',\n            label: 'Utah',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'VT',\n            label: 'Vermont',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'VA',\n            label: 'Virginia',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'WA',\n            label: 'Washington',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'WV',\n            label: 'West Virginia',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'WI',\n            label: 'Wisconsin',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        },\n        {\n            value: 'WY',\n            label: 'Wyoming',\n            options: {\n                specify: {\n                    options: {\n                        validation: {\n                            requiredIf: {}\n                        }\n                    }\n                }\n            }\n        }\n    ];\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'States configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'What the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide additional instructions if necessary'\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'showIf',\n                        type: 'fieldset',\n                        label: 'Show If?',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'property',\n                                    type: 'text',\n                                    label: 'Property name',\n                                    options: {\n                                        hint:\n                                            'Property name of field dependency.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'value',\n                                    type: 'text',\n                                    label: 'Property value',\n                                    options: {\n                                        hint: 'Value of dependent field.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'states'\n    };\n}\n","export class StaticPanelConfig {\n  layout: any = [\n    {\n      type: 'heading',\n      label: 'Panel configuration',\n      options: {\n        level: 1,\n      },\n    },\n    {\n      name: 'name',\n      type: 'text',\n      label: 'Name',\n      options: {\n        hint: 'A unique element name',\n        validation: {\n          required: true,\n        },\n      },\n    },\n    {\n      name: 'type',\n      type: 'text',\n      label: 'Element type',\n      options: {\n        validation: {\n          required: true,\n        },\n        disabled: true,\n      },\n    },\n    {\n      name: 'options',\n      type: 'panel',\n      label: 'Options',\n      options: {\n        fields: [\n          {\n            name: 'hint',\n            type: 'text',\n            label: 'Hint',\n            options: {\n              hint: 'Give user a hint',\n              validation: {\n                required: false,\n              },\n            },\n          },\n        ],\n      },\n    },\n  ];\n  entity: any = {\n    type: 'panel',\n  };\n}\n","export class StaticConfig {\n  layout: any = [\n    {\n      type: 'heading',\n      label: 'Static text configuration',\n      options: {\n        level: 1,\n      },\n    },\n    {\n      name: 'type',\n      type: 'text',\n      label: 'Element type',\n      options: {\n        validation: {\n          required: true,\n        },\n        disabled: true,\n      },\n    },\n    {\n      name: 'label',\n      type: 'textarea',\n      label: 'Label',\n      options: {\n        hint: 'What the user sees',\n        validation: {\n          required: true,\n        },\n      },\n    },\n    {\n      name: 'options',\n      type: 'panel',\n      label: 'Options',\n      options: {\n        fields: [\n          {\n            name: 'showIf',\n            type: 'fieldset',\n            label: 'Show If?',\n            options: {\n              fields: [\n                {\n                  name: 'property',\n                  type: 'text',\n                  label: 'Property name',\n                  options: {\n                    hint: 'Property name of field dependency.',\n                    validation: {\n                      required: false,\n                    },\n                  },\n                },\n                {\n                  name: 'value',\n                  type: 'text',\n                  label: 'Property value',\n                  options: {\n                    hint: 'Value of dependent field.',\n                    validation: {\n                      required: false,\n                    },\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n    },\n  ];\n  entity: any = {\n    type: 'static',\n  };\n}\n","export class TextMaskConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Text mask configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'inputMask',\n                        type: 'text',\n                        label: 'Input mask',\n                        options: {\n                            hint: 'Enter the input mask.',\n                            validation: {\n                                required: true\n                            }\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'minLength',\n                                    type: 'number',\n                                    label: 'Minimum length',\n                                    options: {\n                                        hint:\n                                            'The minimum characters that must be entered',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'maxLength',\n                                    type: 'number',\n                                    label: 'Maximum length',\n                                    options: {\n                                        hint:\n                                            'The maximum characters that can be entered',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'pattern',\n                                    type: 'text',\n                                    label: 'Pattern',\n                                    options: {\n                                        hint:\n                                            'The pattern that can be entered.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'patternValMsg',\n                                    type: 'text',\n                                    label: 'Pattern validation message',\n                                    options: {\n                                        hint:\n                                            'Error message for text not matching pattern.',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'text-mask',\n        options: {\n            disabled: false\n        }\n    };\n}\n","export class TextConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Text configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'autocomplete',\n                        type: 'checkbox',\n                        label: 'Autocomplete?',\n                        options: {\n                            align: 'after',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'items',\n                        type: 'array',\n                        label: 'Autocomplete items',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Enter items',\n                            fields: [\n                                {\n                                    name: 'label',\n                                    type: 'text',\n                                    label: 'Label',\n                                    options: {\n                                        validation: {\n                                            required: true\n                                        },\n                                        hint: 'Enter label'\n                                    }\n                                }\n                            ]\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'minLength',\n                                    type: 'number',\n                                    label: 'Minimum length',\n                                    options: {\n                                        hint:\n                                            'The minimum characters that must be entered',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'maxLength',\n                                    type: 'number',\n                                    label: 'Maximum length',\n                                    options: {\n                                        hint:\n                                            'The maximum characters that can be entered',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'text',\n        options: {\n            disabled: false\n        }\n    };\n}\n","export class TextareaConfig {\n    layout: any = [\n        {\n            type: 'heading',\n            label: 'Textarea configuration',\n            options: {\n                level: 1\n            }\n        },\n        {\n            name: 'type',\n            type: 'text',\n            label: 'Element type',\n            options: {\n                validation: {\n                    required: true\n                },\n                disabled: true\n            }\n        },\n        {\n            name: 'name',\n            type: 'text',\n            label: 'Name',\n            options: {\n                hint: 'A unique element name',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'label',\n            type: 'text',\n            label: 'Label',\n            options: {\n                hint: 'The text the user sees',\n                validation: {\n                    required: true\n                }\n            }\n        },\n        {\n            name: 'options',\n            type: 'panel',\n            label: 'Options',\n            options: {\n                fields: [\n                    {\n                        name: 'hint',\n                        type: 'text',\n                        label: 'Hint',\n                        options: {\n                            hint: 'Give user a hint',\n                            validation: {\n                                required: false\n                            }\n                        }\n                    },\n                    {\n                        name: 'defaultValue',\n                        type: 'text',\n                        label: 'Default value',\n                        options: {\n                            validation: {\n                                required: false\n                            },\n                            hint: 'Provide a default value'\n                        }\n                    },\n                    {\n                        name: 'validation',\n                        type: 'fieldset',\n                        label: 'Validation',\n                        options: {\n                            fields: [\n                                {\n                                    name: 'required',\n                                    type: 'checkbox',\n                                    label: 'Required?',\n                                    options: {\n                                        align: 'after',\n                                        validation: {\n                                            required: false\n                                        }\n                                    }\n                                },\n                                {\n                                    name: 'requiredIf',\n                                    type: 'fieldset',\n                                    label: 'Required If?',\n                                    options: {\n                                        fields: [\n                                            {\n                                                name: 'property',\n                                                type: 'text',\n                                                label: 'Property name',\n                                                options: {\n                                                    hint:\n                                                        'Property name of field dependency.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            },\n                                            {\n                                                name: 'value',\n                                                type: 'text',\n                                                label: 'Property value',\n                                                options: {\n                                                    hint:\n                                                        'Value of dependent field.',\n                                                    validation: {\n                                                        required: false\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    ];\n    entity: any = {\n        type: 'textarea'\n    };\n}\n","import { TextMaskConfig } from './text-mask';\n\nexport class TimeConfig {\n\n  static hint = 'hh:mm AM|PM';\n  static inputMask = '00:00 SS';\n  static pattern = '^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]\\\\s(AM|am|PM|pm)$';\n  static patternValMsg = 'Invalid Time format.';\n  layout: any;\n  entity: any = {\n    type: 'time',\n  };\n  constructor() {\n    this.layout = new TextMaskConfig().layout;\n    this.layout.map((f) => {\n      if (f.type === 'heading') {\n        f.label = 'Time configuration';\n      }\n      if (f.name === 'options') {\n        f.options.fields.map((o) => {\n          if (o.name === 'hint' || o.name === 'inputMask') {\n            o.options.disabled = true;\n          }\n          if (o.name === 'validation') {\n            o.options.fields.map((v) => {\n              if (v.name === 'pattern' || v.name === 'patternValMsg') {\n                v.options.disabled = true;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n}\n","export class TypeSelectConfig {\n  layout: any = [\n    {\n      type: 'select',\n      name: 'elementType',\n      label: 'Element type',\n      options: {\n        hint: 'Select element type',\n        validation: { required: true },\n        items: [\n          {\n            value: 'action-toolbar',\n            label: 'action-toolbar',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'address',\n            label: 'address',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'array',\n            label: 'array',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'button',\n            label: 'button',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'checkbox-group',\n            label: 'checkbox-group',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'checkbox',\n            label: 'checkbox',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'date',\n            label: 'date',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'email',\n            label: 'email',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'fieldset',\n            label: 'fieldset',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'heading',\n            label: 'heading',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'number',\n            label: 'number',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'panel',\n            label: 'panel',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'password',\n            label: 'password',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'phone',\n            label: 'phone',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'radio',\n            label: 'radio',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'select',\n            label: 'select',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'slide-toggle',\n            label: 'slide-toggle',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'slider',\n            label: 'slider',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'ssn',\n            label: 'ssn',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'states',\n            label: 'states',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'static',\n            label: 'static',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'text-mask',\n            label: 'text-mask',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'text',\n            label: 'text',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'textarea',\n            label: 'textarea',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n\n          {\n            value: 'time',\n            label: 'time',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n          {\n            value: 'zip',\n            label: 'zip',\n            options: {\n              specify: {\n                options: {\n                  validation: {},\n                },\n              },\n            },\n          },\n        ],\n      },\n    },\n  ];\n}\n","import { TextMaskConfig } from './text-mask';\n\nexport class ZipConfig {\n\n  static hint = 'xxxxx-xxxx';\n  static inputMask = '00000-0000';\n  static pattern = '^\\\\d{5}(\\\\d{4})?$';\n  static patternValMsg = 'Zip must be 5 or 9 digits';\n  layout: any;\n  entity: any = {\n    type: 'zip',\n  };\n  constructor() {\n    this.layout = new TextMaskConfig().layout;\n    this.layout.map((f) => {\n      if (f.type === 'heading') {\n        f.label = 'Zip configuration';\n      }\n      if (f.name === 'options') {\n        f.options.fields.map((o) => {\n          if (o.name === 'hint' || o.name === 'inputMask') {\n            o.options.disabled = true;\n          }\n          if (o.name === 'validation') {\n            o.options.fields.map((v) => {\n              if (v.name === 'pattern' || v.name === 'patternValMsg') {\n                v.options.disabled = true;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n}\n","import { ElementType } from './element-type';\n\nimport { ActionToolbarConfig } from './config/action-toolbar';\nimport { AddressConfig } from './config/address';\nimport { ArrayConfig } from './config/array';\nimport { ButtonConfig } from './config/button';\nimport { CheckboxConfig } from './config/checkbox';\nimport { CheckboxGroupConfig } from './config/checkbox-group';\nimport { DateConfig } from './config/date';\nimport { EmailConfig } from './config/email';\nimport { FieldsetConfig } from './config/fieldset';\nimport { HeadingConfig } from './config/heading';\nimport { LayoutEditorConfig } from './config/layout-editor';\nimport { NumberConfig } from './config/number';\nimport { PanelConfig } from './config/panel';\nimport { PasswordConfig } from './config/password';\nimport { PhoneConfig } from './config/phone';\nimport { RadioConfig } from './config/radio';\nimport { SelectConfig } from './config/select';\nimport { SlideToggleConfig } from './config/slide-toggle';\nimport { SliderConfig } from './config/slider';\nimport { SsnConfig } from './config/ssn';\nimport { StatesConfig } from './config/states';\nimport { StaticConfig } from './config/static';\nimport { StaticPanelConfig } from './config/static-panel';\nimport { TextConfig } from './config/text';\nimport { TextMaskConfig } from './config/text-mask';\nimport { TextareaConfig } from './config/textarea';\nimport { TimeConfig } from './config/time';\nimport { TypeSelectConfig } from './config/type-select';\nimport { ZipConfig } from './config/zip';\n\nexport class ElementConfig {\n  private static includeLayoutEditor(element, includeEditor) {\n    if (includeEditor) {\n      const layoutEditor = ElementConfig.get(ElementType.LayoutEditor).layout;\n      element.layout\n        .find(e => e.name === 'options')\n        .options.fields.push(layoutEditor);\n    }\n    return element;\n  }\n\n  public static get(elementType: string, includeEditor: boolean = false): any {\n    switch (elementType) {\n      case ElementType.ActionToolbar:\n        return new ActionToolbarConfig();\n      case ElementType.Address:\n        return new AddressConfig();\n      case ElementType.Array:\n        const array = new ArrayConfig();\n        return ElementConfig.includeLayoutEditor(array, includeEditor);\n      case ElementType.Button:\n        return new ButtonConfig();\n      case ElementType.Checkbox:\n        return new CheckboxConfig();\n      case ElementType.CheckboxGroup:\n        return new CheckboxGroupConfig();\n      case ElementType.Date:\n        return new DateConfig();\n      case ElementType.Email:\n        return new EmailConfig();\n      case ElementType.Fieldset:\n        const fieldset = new FieldsetConfig();\n        return ElementConfig.includeLayoutEditor(fieldset, includeEditor);\n      case ElementType.Heading:\n        return new HeadingConfig();\n      case ElementType.LayoutEditor:\n        return new LayoutEditorConfig();\n      case ElementType.Number:\n        return new NumberConfig();\n      case ElementType.Panel:\n        const panel = new PanelConfig();\n        return ElementConfig.includeLayoutEditor(panel, includeEditor);\n      case ElementType.Password:\n        return new PasswordConfig();\n      case ElementType.Phone:\n        return new PhoneConfig();\n      case ElementType.Radio:\n        return new RadioConfig();\n      case ElementType.Select:\n        return new SelectConfig();\n      case ElementType.Slider:\n        return new SliderConfig();\n      case ElementType.SlideToggle:\n        return new SlideToggleConfig();\n      case ElementType.Ssn:\n        return new SsnConfig();\n      case ElementType.States:\n        return new StatesConfig();\n      case ElementType.Static:\n        return new StaticConfig();\n      case ElementType.StaticPanel:\n        const staticPanel = new StaticPanelConfig();\n        return ElementConfig.includeLayoutEditor(staticPanel, includeEditor);\n      case ElementType.Text:\n        return new TextConfig();\n      case ElementType.Textarea:\n        return new TextareaConfig();\n      case ElementType.TextMask:\n        return new TextMaskConfig();\n      case ElementType.Time:\n        return new TimeConfig();\n      case ElementType.Zip:\n        return new ZipConfig();\n      default:\n        throw new Error(\n          `Trying to use an unsupported element type (${elementType}).`\n        );\n    }\n  }\n\n  public static getTypeSelection(): any {\n    return new TypeSelectConfig();\n  }\n\n  public static hasNestedProperties(entity: any) {\n    return (\n      entity.options &&\n      entity.options.fields &&\n      Array.isArray(entity.options.fields) &&\n      entity.type !== ElementType.CheckboxGroup\n    );\n  }\n\n  public static parseEntity(entity: any, push: boolean = true): any {\n    const configs = [];\n    for(const e of entity) {\n        const elementConfig: any = this.get(e.type);\n      if (this.hasNestedProperties(e)) {\n        elementConfig.layout\n          .find(p => p.name === 'options')\n          .options.fields.push(\n            this.parseEntity(e.options.fields, false)\n          );\n      }\n      configs.push(elementConfig.layout);\n    }\n   \n    const config = this.get(ElementType.LayoutEditor).layout;\n    config.options.fields = configs;\n\n    if (!push) {\n      return config;\n    }\n\n    const layout = [];\n    layout.push(config);\n    return layout;\n  }\n}\n","export enum ElementType {\n  ActionToolbar = 'action-toolbar',\n  Address = 'address',\n  Array = 'array',\n  Button = 'button',\n  Checkbox = 'checkbox',\n  CheckboxGroup = 'checkbox-group',\n  Date = 'date',\n  Email = 'email',\n  Fieldset = 'fieldset',\n  Heading = 'heading',\n  LayoutEditor = 'layout-editor',\n  Number = 'number',\n  Panel = 'panel',\n  Password = 'password',\n  Phone = 'phone',\n  Radio = 'radio',\n  Select = 'select',\n  Slider = 'slider',\n  SlideToggle = 'slide-toggle',\n  Ssn = 'ssn',\n  States = 'states',\n  Static = 'static',\n  StaticPanel = 'static-panel',\n  Text = 'text',\n  Textarea = 'textarea',\n  TextMask = 'text-mask',\n  Time = 'time',\n  Zip = 'zip',\n}\n","export { ElementType } from './element-type';\n\nexport { ActionToolbarConfig } from './config';\nexport { AddressConfig } from './config';\nexport { ArrayConfig } from './config';\nexport { ButtonConfig } from './config';\nexport { CheckboxConfig } from './config';\nexport { CheckboxGroupConfig } from './config';\nexport { DateConfig } from './config';\nexport { EmailConfig } from './config';\nexport { FieldsetConfig } from './config';\nexport { HeadingConfig } from './config';\nexport { LayoutEditorConfig } from './config';\nexport { NumberConfig } from './config';\nexport { PanelConfig } from './config';\nexport { PasswordConfig } from './config';\nexport { PhoneConfig } from './config';\nexport { RadioConfig } from './config';\nexport { SelectConfig } from './config';\nexport { SliderConfig } from './config';\nexport { SlideToggleConfig } from './config';\nexport { StatesConfig } from './config';\nexport { StaticConfig } from './config';\nexport { StaticPanelConfig } from './config';\nexport { SsnConfig } from './config';\nexport { TextConfig } from './config';\nexport { TextareaConfig } from './config';\nexport { TextMaskConfig } from './config';\nexport { TimeConfig } from './config';\nexport { TypeSelectConfig } from './config';\nexport { ZipConfig } from './config';\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport 'hammerjs';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n\n    CdkTableModule,\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n\n    CdkTableModule,\n  ],\n  declarations: [],\n})\nexport class MaterialModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: MaterialModule,\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'MaterialModule is already loaded. Import it in the SharedModule only',\n      );\n    }\n  }\n}\n","export {\n    MaximumDateValidatorDirective\n} from './maximum-date/maximum-date.directive';\nexport {\n    MaximumNumberValidatorDirective\n} from './maximum-number/maximum-number.directive';\nexport {\n    MinimumDateValidatorDirective\n} from './minimum-date/minimum-date.directive';\nexport {\n    MinimumNumberValidatorDirective\n} from './minimum-number/minimum-number.directive';\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { FormControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector:\n    '[dynamicMaxDate],[maxDate][formControlName],[maxDate][formControl],[maxDate][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => MaximumDateValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MaximumDateValidatorDirective implements Validator {\n  @Input()\n  maxDate: string;\n\n  validate(control: FormControl): { [key: string]: any } {\n    if (!control.value || !this.maxDate) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = new Date(control.value);\n    const max = new Date(this.maxDate);\n\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    // !isDate(value) && !isDate(max) &&\n    return value > max ? { max: { max, actual: control.value } } : null;\n  }\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { FormControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector:\n    '[dynamicMin],[maxNumber][formControlName],[maxNumber][formControl],[maxNumber][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => MaximumNumberValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MaximumNumberValidatorDirective implements Validator {\n  @Input()\n  maxNumber: string;\n\n  validate(control: FormControl): { [key: string]: any } {\n    if (!control.value || !this.maxNumber) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    const max = parseFloat(this.maxNumber);\n\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && !isNaN(max) && value > max\n      ? { max: { max, actual: control.value } }\n      : null;\n  }\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { FormControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector:\n    '[dynamicMinDate],[minDate][formControlName],[minDate][formControl],[minDate][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => MinimumDateValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MinimumDateValidatorDirective implements Validator {\n  @Input()\n  minDate: string;\n\n  validate(control: FormControl): { [key: string]: any } {\n    if (!control.value || !this.minDate) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = new Date(control.value);\n    const min = new Date(this.minDate);\n\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    // !isDate(value) && !isDate(min) &&\n    return value < min ? { min: { min, actual: control.value } } : null;\n  }\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport { FormControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n@Directive({\n  selector:\n    '[dynamicMin],[minNumber][formControlName],[minNumber][formControl],[minNumber][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => MinimumNumberValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MinimumNumberValidatorDirective implements Validator {\n  @Input()\n  minNumber: string;\n\n  validate(control: FormControl): { [key: string]: any } {\n    if (!control.value || !this.minNumber) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    const min = parseFloat(this.minNumber);\n\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && !isNaN(min) && value < min\n      ? { min: { min, actual: control.value } }\n      : null;\n  }\n}\n","// hold the common components, directives, and pipes\n// and share them with the modules that need them.\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n// modules that consolidate commonly used stuff\nimport { NgxMaskModule } from 'ngx-mask';\nimport { MaterialModule } from '../material/material.module';\nimport {\n    MaximumDateValidatorDirective,\n    MaximumNumberValidatorDirective,\n    MinimumDateValidatorDirective,\n    MinimumNumberValidatorDirective\n} from './directives';\n\n@NgModule({\n    imports: [CommonModule, MaterialModule, NgxMaskModule.forRoot()],\n    declarations: [\n        MinimumNumberValidatorDirective,\n        MinimumDateValidatorDirective,\n        MaximumNumberValidatorDirective,\n        MaximumDateValidatorDirective\n    ],\n    exports: [\n        CommonModule,\n        MaterialModule,\n        NgxMaskModule,\n\n        MinimumNumberValidatorDirective,\n        MinimumDateValidatorDirective,\n        MaximumNumberValidatorDirective,\n        MaximumDateValidatorDirective\n    ]\n})\nexport class SharedModule {}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from '../demo/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}